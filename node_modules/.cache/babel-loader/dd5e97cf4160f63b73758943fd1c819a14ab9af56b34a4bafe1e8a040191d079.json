{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*! Responsive 3.0.2\n * Â© SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\nimport DataTable from 'datatables.net';\n\n// Allow reassignment of the $ variable\nlet $ = jQuery;\n\n/**\n * @summary     Responsive\n * @description Responsive tables plug-in for DataTables\n * @version     3.0.2\n * @author      SpryMedia Ltd\n * @copyright   SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/**\n * Responsive is a plug-in for the DataTables library that makes use of\n * DataTables' ability to change the visibility of columns, changing the\n * visibility of columns so the displayed columns fit into the table container.\n * The end result is that complex tables will be dynamically adjusted to fit\n * into the viewport, be it on a desktop, tablet or mobile browser.\n *\n * Responsive for DataTables has two modes of operation, which can used\n * individually or combined:\n *\n * * Class name based control - columns assigned class names that match the\n *   breakpoint logic can be shown / hidden as required for each breakpoint.\n * * Automatic control - columns are automatically hidden when there is no\n *   room left to display them. Columns removed from the right.\n *\n * In additional to column visibility control, Responsive also has built into\n * options to use DataTables' child row display to show / hide the information\n * from the table that has been hidden. There are also two modes of operation\n * for this child row display:\n *\n * * Inline - when the control element that the user can use to show / hide\n *   child rows is displayed inside the first column of the table.\n * * Column - where a whole column is dedicated to be the show / hide control.\n *\n * Initialisation of Responsive is performed by:\n *\n * * Adding the class `responsive` or `dt-responsive` to the table. In this case\n *   Responsive will automatically be initialised with the default configuration\n *   options when the DataTable is created.\n * * Using the `responsive` option in the DataTables configuration options. This\n *   can also be used to specify the configuration options, or simply set to\n *   `true` to use the defaults.\n *\n *  @class\n *  @param {object} settings DataTables settings object for the host table\n *  @param {object} [opts] Configuration options\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.10.3+\n *\n *  @example\n *      $('#example').DataTable( {\n *        responsive: true\n *      } );\n *    } );\n */\nvar Responsive = function (settings, opts) {\n  // Sanity check that we are using DataTables 1.10 or newer\n  if (!DataTable.versionCheck || !DataTable.versionCheck('2')) {\n    throw 'DataTables Responsive requires DataTables 2 or newer';\n  }\n  this.s = {\n    childNodeStore: {},\n    columns: [],\n    current: [],\n    dt: new DataTable.Api(settings)\n  };\n\n  // Check if responsive has already been initialised on this table\n  if (this.s.dt.settings()[0].responsive) {\n    return;\n  }\n\n  // details is an object, but for simplicity the user can give it as a string\n  // or a boolean\n  if (opts && typeof opts.details === 'string') {\n    opts.details = {\n      type: opts.details\n    };\n  } else if (opts && opts.details === false) {\n    opts.details = {\n      type: false\n    };\n  } else if (opts && opts.details === true) {\n    opts.details = {\n      type: 'inline'\n    };\n  }\n  this.c = $.extend(true, {}, Responsive.defaults, DataTable.defaults.responsive, opts);\n  settings.responsive = this;\n  this._constructor();\n};\n$.extend(Responsive.prototype, {\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Constructor\n   */\n\n  /**\n   * Initialise the Responsive instance\n   *\n   * @private\n   */\n  _constructor: function () {\n    var that = this;\n    var dt = this.s.dt;\n    var oldWindowWidth = $(window).innerWidth();\n    dt.settings()[0]._responsive = this;\n\n    // Use DataTables' throttle function to avoid processor thrashing\n    $(window).on('orientationchange.dtr', DataTable.util.throttle(function () {\n      // iOS has a bug whereby resize can fire when only scrolling\n      // See: http://stackoverflow.com/questions/8898412\n      var width = $(window).innerWidth();\n      if (width !== oldWindowWidth) {\n        that._resize();\n        oldWindowWidth = width;\n      }\n    }));\n\n    // Handle new rows being dynamically added - needed as responsive\n    // updates all rows (shown or not) a responsive change, rather than\n    // per draw.\n    dt.on('row-created.dtr', function (e, tr, data, idx) {\n      if ($.inArray(false, that.s.current) !== -1) {\n        $('>td, >th', tr).each(function (i) {\n          var idx = dt.column.index('toData', i);\n          if (that.s.current[idx] === false) {\n            $(this).css('display', 'none').addClass('dtr-hidden');\n          }\n        });\n      }\n    });\n\n    // Destroy event handler\n    dt.on('destroy.dtr', function () {\n      dt.off('.dtr');\n      $(dt.table().body()).off('.dtr');\n      $(window).off('resize.dtr orientationchange.dtr');\n      dt.cells('.dtr-control').nodes().to$().removeClass('dtr-control');\n      $(dt.table().node()).removeClass('dtr-inline collapsed');\n\n      // Restore the columns that we've hidden\n      $.each(that.s.current, function (i, val) {\n        if (val === false) {\n          that._setColumnVis(i, true);\n        }\n      });\n    });\n\n    // Reorder the breakpoints array here in case they have been added out\n    // of order\n    this.c.breakpoints.sort(function (a, b) {\n      return a.width < b.width ? 1 : a.width > b.width ? -1 : 0;\n    });\n    this._classLogic();\n    this._resizeAuto();\n\n    // Details handler\n    var details = this.c.details;\n    if (details.type !== false) {\n      that._detailsInit();\n\n      // DataTables will trigger this event on every column it shows and\n      // hides individually\n      dt.on('column-visibility.dtr', function () {\n        // Use a small debounce to allow multiple columns to be set together\n        if (that._timer) {\n          clearTimeout(that._timer);\n        }\n        that._timer = setTimeout(function () {\n          that._timer = null;\n          that._classLogic();\n          that._resizeAuto();\n          that._resize(true);\n          that._redrawChildren();\n        }, 100);\n      });\n\n      // Redraw the details box on each draw which will happen if the data\n      // has changed. This is used until DataTables implements a native\n      // `updated` event for rows\n      dt.on('draw.dtr', function () {\n        that._redrawChildren();\n      });\n      $(dt.table().node()).addClass('dtr-' + details.type);\n    }\n    dt.on('column-reorder.dtr', function (e, settings, details) {\n      that._classLogic();\n      that._resizeAuto();\n      that._resize(true);\n    });\n\n    // Change in column sizes means we need to calc\n    dt.on('column-sizing.dtr', function () {\n      that._resizeAuto();\n      that._resize();\n    });\n\n    // DT2 let's us tell it if we are hiding columns\n    dt.on('column-calc.dt', function (e, d) {\n      var curr = that.s.current;\n      for (var i = 0; i < curr.length; i++) {\n        var idx = d.visible.indexOf(i);\n        if (curr[i] === false && idx >= 0) {\n          d.visible.splice(idx, 1);\n        }\n      }\n    });\n\n    // On Ajax reload we want to reopen any child rows which are displayed\n    // by responsive\n    dt.on('preXhr.dtr', function () {\n      var rowIds = [];\n      dt.rows().every(function () {\n        if (this.child.isShown()) {\n          rowIds.push(this.id(true));\n        }\n      });\n      dt.one('draw.dtr', function () {\n        that._resizeAuto();\n        that._resize();\n        dt.rows(rowIds).every(function () {\n          that._detailsDisplay(this, false);\n        });\n      });\n    });\n    dt.on('draw.dtr', function () {\n      that._controlClass();\n    }).on('init.dtr', function (e, settings, details) {\n      if (e.namespace !== 'dt') {\n        return;\n      }\n      that._resizeAuto();\n      that._resize();\n    });\n\n    // First pass - draw the table for the current viewport size\n    this._resize();\n  },\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Private methods\n   */\n\n  /**\n   * Insert a `col` tag into the correct location in a `colgroup`.\n   *\n   * @param {jQuery} colGroup The `colgroup` tag\n   * @param {jQuery} colEl The `col` tag\n   */\n  _colGroupAttach: function (colGroup, colEls, idx) {\n    var found = null;\n\n    // No need to do anything if already attached\n    if (colEls[idx].get(0).parentNode === colGroup[0]) {\n      return;\n    }\n\n    // Find the first `col` after our own which is already attached\n    for (var i = idx + 1; i < colEls.length; i++) {\n      if (colGroup[0] === colEls[i].get(0).parentNode) {\n        found = i;\n        break;\n      }\n    }\n    if (found !== null) {\n      // Insert before\n      colEls[idx].insertBefore(colEls[found][0]);\n    } else {\n      // If wasn't found, insert at the end\n      colGroup.append(colEls[idx]);\n    }\n  },\n  /**\n   * Get and store nodes from a cell - use for node moving renderers\n   *\n   * @param {*} dt DT instance\n   * @param {*} row Row index\n   * @param {*} col Column index\n   */\n  _childNodes: function (dt, row, col) {\n    var name = row + '-' + col;\n    if (this.s.childNodeStore[name]) {\n      return this.s.childNodeStore[name];\n    }\n\n    // https://jsperf.com/childnodes-array-slice-vs-loop\n    var nodes = [];\n    var children = dt.cell(row, col).node().childNodes;\n    for (var i = 0, ien = children.length; i < ien; i++) {\n      nodes.push(children[i]);\n    }\n    this.s.childNodeStore[name] = nodes;\n    return nodes;\n  },\n  /**\n   * Restore nodes from the cache to a table cell\n   *\n   * @param {*} dt DT instance\n   * @param {*} row Row index\n   * @param {*} col Column index\n   */\n  _childNodesRestore: function (dt, row, col) {\n    var name = row + '-' + col;\n    if (!this.s.childNodeStore[name]) {\n      return;\n    }\n    var node = dt.cell(row, col).node();\n    var store = this.s.childNodeStore[name];\n    if (store.length > 0) {\n      var parent = store[0].parentNode;\n      var parentChildren = parent.childNodes;\n      var a = [];\n      for (var i = 0, ien = parentChildren.length; i < ien; i++) {\n        a.push(parentChildren[i]);\n      }\n      for (var j = 0, jen = a.length; j < jen; j++) {\n        node.appendChild(a[j]);\n      }\n    }\n    this.s.childNodeStore[name] = undefined;\n  },\n  /**\n   * Calculate the visibility for the columns in a table for a given\n   * breakpoint. The result is pre-determined based on the class logic if\n   * class names are used to control all columns, but the width of the table\n   * is also used if there are columns which are to be automatically shown\n   * and hidden.\n   *\n   * @param  {string} breakpoint Breakpoint name to use for the calculation\n   * @return {array} Array of boolean values initiating the visibility of each\n   *   column.\n   *  @private\n   */\n  _columnsVisiblity: function (breakpoint) {\n    var dt = this.s.dt;\n    var columns = this.s.columns;\n    var i, ien;\n\n    // Create an array that defines the column ordering based first on the\n    // column's priority, and secondly the column index. This allows the\n    // columns to be removed from the right if the priority matches\n    var order = columns.map(function (col, idx) {\n      return {\n        columnIdx: idx,\n        priority: col.priority\n      };\n    }).sort(function (a, b) {\n      if (a.priority !== b.priority) {\n        return a.priority - b.priority;\n      }\n      return a.columnIdx - b.columnIdx;\n    });\n\n    // Class logic - determine which columns are in this breakpoint based\n    // on the classes. If no class control (i.e. `auto`) then `-` is used\n    // to indicate this to the rest of the function\n    var display = $.map(columns, function (col, i) {\n      if (dt.column(i).visible() === false) {\n        return 'not-visible';\n      }\n      return col.auto && col.minWidth === null ? false : col.auto === true ? '-' : $.inArray(breakpoint, col.includeIn) !== -1;\n    });\n\n    // Auto column control - first pass: how much width is taken by the\n    // ones that must be included from the non-auto columns\n    var requiredWidth = 0;\n    for (i = 0, ien = display.length; i < ien; i++) {\n      if (display[i] === true) {\n        requiredWidth += columns[i].minWidth;\n      }\n    }\n\n    // Second pass, use up any remaining width for other columns. For\n    // scrolling tables we need to subtract the width of the scrollbar. It\n    // may not be requires which makes this sub-optimal, but it would\n    // require another full redraw to make complete use of those extra few\n    // pixels\n    var scrolling = dt.settings()[0].oScroll;\n    var bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;\n    var widthAvailable = dt.table().container().offsetWidth - bar;\n    var usedWidth = widthAvailable - requiredWidth;\n\n    // Control column needs to always be included. This makes it sub-\n    // optimal in terms of using the available with, but to stop layout\n    // thrashing or overflow. Also we need to account for the control column\n    // width first so we know how much width is available for the other\n    // columns, since the control column might not be the first one shown\n    for (i = 0, ien = display.length; i < ien; i++) {\n      if (columns[i].control) {\n        usedWidth -= columns[i].minWidth;\n      }\n    }\n\n    // Allow columns to be shown (counting by priority and then right to\n    // left) until we run out of room\n    var empty = false;\n    for (i = 0, ien = order.length; i < ien; i++) {\n      var colIdx = order[i].columnIdx;\n      if (display[colIdx] === '-' && !columns[colIdx].control && columns[colIdx].minWidth) {\n        // Once we've found a column that won't fit we don't let any\n        // others display either, or columns might disappear in the\n        // middle of the table\n        if (empty || usedWidth - columns[colIdx].minWidth < 0) {\n          empty = true;\n          display[colIdx] = false;\n        } else {\n          display[colIdx] = true;\n        }\n        usedWidth -= columns[colIdx].minWidth;\n      }\n    }\n\n    // Determine if the 'control' column should be shown (if there is one).\n    // This is the case when there is a hidden column (that is not the\n    // control column). The two loops look inefficient here, but they are\n    // trivial and will fly through. We need to know the outcome from the\n    // first , before the action in the second can be taken\n    var showControl = false;\n    for (i = 0, ien = columns.length; i < ien; i++) {\n      if (!columns[i].control && !columns[i].never && display[i] === false) {\n        showControl = true;\n        break;\n      }\n    }\n    for (i = 0, ien = columns.length; i < ien; i++) {\n      if (columns[i].control) {\n        display[i] = showControl;\n      }\n\n      // Replace not visible string with false from the control column detection above\n      if (display[i] === 'not-visible') {\n        display[i] = false;\n      }\n    }\n\n    // Finally we need to make sure that there is at least one column that\n    // is visible\n    if ($.inArray(true, display) === -1) {\n      display[0] = true;\n    }\n    return display;\n  },\n  /**\n   * Create the internal `columns` array with information about the columns\n   * for the table. This includes determining which breakpoints the column\n   * will appear in, based upon class names in the column, which makes up the\n   * vast majority of this method.\n   *\n   * @private\n   */\n  _classLogic: function () {\n    var that = this;\n    var breakpoints = this.c.breakpoints;\n    var dt = this.s.dt;\n    var columns = dt.columns().eq(0).map(function (i) {\n      var column = this.column(i);\n      var className = column.header().className;\n      var priority = column.init().responsivePriority;\n      var dataPriority = column.header().getAttribute('data-priority');\n      if (priority === undefined) {\n        priority = dataPriority === undefined || dataPriority === null ? 10000 : dataPriority * 1;\n      }\n      return {\n        className: className,\n        includeIn: [],\n        auto: false,\n        control: false,\n        never: className.match(/\\b(dtr\\-)?never\\b/) ? true : false,\n        priority: priority\n      };\n    });\n\n    // Simply add a breakpoint to `includeIn` array, ensuring that there are\n    // no duplicates\n    var add = function (colIdx, name) {\n      var includeIn = columns[colIdx].includeIn;\n      if ($.inArray(name, includeIn) === -1) {\n        includeIn.push(name);\n      }\n    };\n    var column = function (colIdx, name, operator, matched) {\n      var size, i, ien;\n      if (!operator) {\n        columns[colIdx].includeIn.push(name);\n      } else if (operator === 'max-') {\n        // Add this breakpoint and all smaller\n        size = that._find(name).width;\n        for (i = 0, ien = breakpoints.length; i < ien; i++) {\n          if (breakpoints[i].width <= size) {\n            add(colIdx, breakpoints[i].name);\n          }\n        }\n      } else if (operator === 'min-') {\n        // Add this breakpoint and all larger\n        size = that._find(name).width;\n        for (i = 0, ien = breakpoints.length; i < ien; i++) {\n          if (breakpoints[i].width >= size) {\n            add(colIdx, breakpoints[i].name);\n          }\n        }\n      } else if (operator === 'not-') {\n        // Add all but this breakpoint\n        for (i = 0, ien = breakpoints.length; i < ien; i++) {\n          if (breakpoints[i].name.indexOf(matched) === -1) {\n            add(colIdx, breakpoints[i].name);\n          }\n        }\n      }\n    };\n\n    // Loop over each column and determine if it has a responsive control\n    // class\n    columns.each(function (col, i) {\n      var classNames = col.className.split(' ');\n      var hasClass = false;\n\n      // Split the class name up so multiple rules can be applied if needed\n      for (var k = 0, ken = classNames.length; k < ken; k++) {\n        var className = classNames[k].trim();\n        if (className === 'all' || className === 'dtr-all') {\n          // Include in all\n          hasClass = true;\n          col.includeIn = $.map(breakpoints, function (a) {\n            return a.name;\n          });\n          return;\n        } else if (className === 'none' || className === 'dtr-none' || col.never) {\n          // Include in none (default) and no auto\n          hasClass = true;\n          return;\n        } else if (className === 'control' || className === 'dtr-control') {\n          // Special column that is only visible, when one of the other\n          // columns is hidden. This is used for the details control\n          hasClass = true;\n          col.control = true;\n          return;\n        }\n        $.each(breakpoints, function (j, breakpoint) {\n          // Does this column have a class that matches this breakpoint?\n          var brokenPoint = breakpoint.name.split('-');\n          var re = new RegExp('(min\\\\-|max\\\\-|not\\\\-)?(' + brokenPoint[0] + ')(\\\\-[_a-zA-Z0-9])?');\n          var match = className.match(re);\n          if (match) {\n            hasClass = true;\n            if (match[2] === brokenPoint[0] && match[3] === '-' + brokenPoint[1]) {\n              // Class name matches breakpoint name fully\n              column(i, breakpoint.name, match[1], match[2] + match[3]);\n            } else if (match[2] === brokenPoint[0] && !match[3]) {\n              // Class name matched primary breakpoint name with no qualifier\n              column(i, breakpoint.name, match[1], match[2]);\n            }\n          }\n        });\n      }\n\n      // If there was no control class, then automatic sizing is used\n      if (!hasClass) {\n        col.auto = true;\n      }\n    });\n    this.s.columns = columns;\n  },\n  /**\n   * Update the cells to show the correct control class / button\n   * @private\n   */\n  _controlClass: function () {\n    if (this.c.details.type === 'inline') {\n      var dt = this.s.dt;\n      var columnsVis = this.s.current;\n      var firstVisible = $.inArray(true, columnsVis);\n\n      // Remove from any cells which shouldn't have it\n      dt.cells(null, function (idx) {\n        return idx !== firstVisible;\n      }, {\n        page: 'current'\n      }).nodes().to$().filter('.dtr-control').removeClass('dtr-control');\n      dt.cells(null, firstVisible, {\n        page: 'current'\n      }).nodes().to$().addClass('dtr-control');\n    }\n  },\n  /**\n   * Show the details for the child row\n   *\n   * @param  {DataTables.Api} row    API instance for the row\n   * @param  {boolean}        update Update flag\n   * @private\n   */\n  _detailsDisplay: function (row, update) {\n    var that = this;\n    var dt = this.s.dt;\n    var details = this.c.details;\n    var event = function (res) {\n      $(row.node()).toggleClass('dtr-expanded', res !== false);\n      $(dt.table().node()).triggerHandler('responsive-display.dt', [dt, row, res, update]);\n    };\n    if (details && details.type !== false) {\n      var renderer = typeof details.renderer === 'string' ? Responsive.renderer[details.renderer]() : details.renderer;\n      var res = details.display(row, update, function () {\n        return renderer.call(that, dt, row[0][0], that._detailsObj(row[0]));\n      }, function () {\n        event(false);\n      });\n      if (typeof res === 'boolean') {\n        event(res);\n      }\n    }\n  },\n  /**\n   * Initialisation for the details handler\n   *\n   * @private\n   */\n  _detailsInit: function () {\n    var that = this;\n    var dt = this.s.dt;\n    var details = this.c.details;\n\n    // The inline type always uses the first child as the target\n    if (details.type === 'inline') {\n      details.target = 'td.dtr-control, th.dtr-control';\n    }\n\n    // Keyboard accessibility\n    dt.on('draw.dtr', function () {\n      that._tabIndexes();\n    });\n    that._tabIndexes(); // Initial draw has already happened\n\n    $(dt.table().body()).on('keyup.dtr', 'td, th', function (e) {\n      if (e.keyCode === 13 && $(this).data('dtr-keyboard')) {\n        $(this).click();\n      }\n    });\n\n    // type.target can be a string jQuery selector or a column index\n    var target = details.target;\n    var selector = typeof target === 'string' ? target : 'td, th';\n    if (target !== undefined || target !== null) {\n      // Click handler to show / hide the details rows when they are available\n      $(dt.table().body()).on('click.dtr mousedown.dtr mouseup.dtr', selector, function (e) {\n        // If the table is not collapsed (i.e. there is no hidden columns)\n        // then take no action\n        if (!$(dt.table().node()).hasClass('collapsed')) {\n          return;\n        }\n\n        // Check that the row is actually a DataTable's controlled node\n        if ($.inArray($(this).closest('tr').get(0), dt.rows().nodes().toArray()) === -1) {\n          return;\n        }\n\n        // For column index, we determine if we should act or not in the\n        // handler - otherwise it is already okay\n        if (typeof target === 'number') {\n          var targetIdx = target < 0 ? dt.columns().eq(0).length + target : target;\n          if (dt.cell(this).index().column !== targetIdx) {\n            return;\n          }\n        }\n\n        // $().closest() includes itself in its check\n        var row = dt.row($(this).closest('tr'));\n\n        // Check event type to do an action\n        if (e.type === 'click') {\n          // The renderer is given as a function so the caller can execute it\n          // only when they need (i.e. if hiding there is no point is running\n          // the renderer)\n          that._detailsDisplay(row, false);\n        } else if (e.type === 'mousedown') {\n          // For mouse users, prevent the focus ring from showing\n          $(this).css('outline', 'none');\n        } else if (e.type === 'mouseup') {\n          // And then re-allow at the end of the click\n          $(this).trigger('blur').css('outline', '');\n        }\n      });\n    }\n  },\n  /**\n   * Get the details to pass to a renderer for a row\n   * @param  {int} rowIdx Row index\n   * @private\n   */\n  _detailsObj: function (rowIdx) {\n    var that = this;\n    var dt = this.s.dt;\n    return $.map(this.s.columns, function (col, i) {\n      // Never and control columns should not be passed to the renderer\n      if (col.never || col.control) {\n        return;\n      }\n      var dtCol = dt.settings()[0].aoColumns[i];\n      return {\n        className: dtCol.sClass,\n        columnIndex: i,\n        data: dt.cell(rowIdx, i).render(that.c.orthogonal),\n        hidden: dt.column(i).visible() && !that.s.current[i],\n        rowIndex: rowIdx,\n        title: dt.column(i).title()\n      };\n    });\n  },\n  /**\n   * Find a breakpoint object from a name\n   *\n   * @param  {string} name Breakpoint name to find\n   * @return {object}      Breakpoint description object\n   * @private\n   */\n  _find: function (name) {\n    var breakpoints = this.c.breakpoints;\n    for (var i = 0, ien = breakpoints.length; i < ien; i++) {\n      if (breakpoints[i].name === name) {\n        return breakpoints[i];\n      }\n    }\n  },\n  /**\n   * Re-create the contents of the child rows as the display has changed in\n   * some way.\n   *\n   * @private\n   */\n  _redrawChildren: function () {\n    var that = this;\n    var dt = this.s.dt;\n    dt.rows({\n      page: 'current'\n    }).iterator('row', function (settings, idx) {\n      that._detailsDisplay(dt.row(idx), true);\n    });\n  },\n  /**\n   * Alter the table display for a resized viewport. This involves first\n   * determining what breakpoint the window currently is in, getting the\n   * column visibilities to apply and then setting them.\n   *\n   * @param  {boolean} forceRedraw Force a redraw\n   * @private\n   */\n  _resize: function (forceRedraw) {\n    var that = this;\n    var dt = this.s.dt;\n    var width = $(window).innerWidth();\n    var breakpoints = this.c.breakpoints;\n    var breakpoint = breakpoints[0].name;\n    var columns = this.s.columns;\n    var i, ien;\n    var oldVis = this.s.current.slice();\n\n    // Determine what breakpoint we are currently at\n    for (i = breakpoints.length - 1; i >= 0; i--) {\n      if (width <= breakpoints[i].width) {\n        breakpoint = breakpoints[i].name;\n        break;\n      }\n    }\n\n    // Show the columns for that break point\n    var columnsVis = this._columnsVisiblity(breakpoint);\n    this.s.current = columnsVis;\n\n    // Set the class before the column visibility is changed so event\n    // listeners know what the state is. Need to determine if there are\n    // any columns that are not visible but can be shown\n    var collapsedClass = false;\n    for (i = 0, ien = columns.length; i < ien; i++) {\n      if (columnsVis[i] === false && !columns[i].never && !columns[i].control && !dt.column(i).visible() === false) {\n        collapsedClass = true;\n        break;\n      }\n    }\n    $(dt.table().node()).toggleClass('collapsed', collapsedClass);\n    var changed = false;\n    var visible = 0;\n    var dtSettings = dt.settings()[0];\n    var colGroup = $(dt.table().node()).children('colgroup');\n    var colEls = dtSettings.aoColumns.map(function (col) {\n      return col.colEl;\n    });\n    dt.columns().eq(0).each(function (colIdx, i) {\n      //console.log(colIdx, i);\n      // Do nothing on DataTables' hidden column - DT removes it from the table\n      // so we need to slide back\n      if (!dt.column(colIdx).visible()) {\n        return;\n      }\n      if (columnsVis[i] === true) {\n        visible++;\n      }\n      if (forceRedraw || columnsVis[i] !== oldVis[i]) {\n        changed = true;\n        that._setColumnVis(colIdx, columnsVis[i]);\n      }\n\n      // DataTables 2 uses `col` to define the width for a column\n      // and this needs to run each time, as DataTables will change\n      // the column width. We may need to reattach if we've removed\n      // an element previously.\n      if (!columnsVis[i]) {\n        colEls[i].detach();\n      } else {\n        that._colGroupAttach(colGroup, colEls, i);\n      }\n    });\n    if (changed) {\n      dt.columns.adjust();\n      this._redrawChildren();\n\n      // Inform listeners of the change\n      $(dt.table().node()).trigger('responsive-resize.dt', [dt, this._responsiveOnlyHidden()]);\n\n      // If no records, update the \"No records\" display element\n      if (dt.page.info().recordsDisplay === 0) {\n        $('td', dt.table().body()).eq(0).attr('colspan', visible);\n      }\n    }\n    that._controlClass();\n  },\n  /**\n   * Determine the width of each column in the table so the auto column hiding\n   * has that information to work with. This method is never going to be 100%\n   * perfect since column widths can change slightly per page, but without\n   * seriously compromising performance this is quite effective.\n   *\n   * @private\n   */\n  _resizeAuto: function () {\n    var dt = this.s.dt;\n    var columns = this.s.columns;\n    var that = this;\n    var visibleColumns = dt.columns().indexes().filter(function (idx) {\n      return dt.column(idx).visible();\n    });\n\n    // Are we allowed to do auto sizing?\n    if (!this.c.auto) {\n      return;\n    }\n\n    // Are there any columns that actually need auto-sizing, or do they all\n    // have classes defined\n    if ($.inArray(true, $.map(columns, function (c) {\n      return c.auto;\n    })) === -1) {\n      return;\n    }\n\n    // Clone the table with the current data in it\n    var clonedTable = dt.table().node().cloneNode(false);\n    var clonedHeader = $(dt.table().header().cloneNode(false)).appendTo(clonedTable);\n    var clonedFooter = $(dt.table().footer().cloneNode(false)).appendTo(clonedTable);\n    var clonedBody = $(dt.table().body()).clone(false, false).empty().appendTo(clonedTable); // use jQuery because of IE8\n\n    clonedTable.style.width = 'auto';\n\n    // Header\n    dt.table().header.structure(visibleColumns).forEach(row => {\n      var cells = row.filter(function (el) {\n        return el ? true : false;\n      }).map(function (el) {\n        return $(el.cell).clone(false).css('display', 'table-cell').css('width', 'auto').css('min-width', 0);\n      });\n      $('<tr/>').append(cells).appendTo(clonedHeader);\n    });\n\n    // Always need an empty row that we can read widths from\n    var emptyRow = $('<tr/>').appendTo(clonedBody);\n    for (var i = 0; i < visibleColumns.count(); i++) {\n      emptyRow.append('<td/>');\n    }\n\n    // Body rows\n    dt.rows({\n      page: 'current'\n    }).every(function (rowIdx) {\n      var node = this.node();\n      if (!node) {\n        return;\n      }\n\n      // We clone the table's rows and cells to create the sizing table\n      var tr = node.cloneNode(false);\n      dt.cells(rowIdx, visibleColumns).every(function (rowIdx2, colIdx) {\n        // If nodes have been moved out (listHiddenNodes), we need to\n        // clone from the store\n        var store = that.s.childNodeStore[rowIdx + '-' + colIdx];\n        if (store) {\n          $(this.node().cloneNode(false)).append($(store).clone()).appendTo(tr);\n        } else {\n          $(this.node()).clone(false).appendTo(tr);\n        }\n      });\n      clonedBody.append(tr);\n    });\n\n    // Any cells which were hidden by Responsive in the host table, need to\n    // be visible here for the calculations\n    clonedBody.find('th, td').css('display', '');\n\n    // Footer\n    dt.table().footer.structure(visibleColumns).forEach(row => {\n      var cells = row.filter(function (el) {\n        return el ? true : false;\n      }).map(function (el) {\n        return $(el.cell).clone(false).css('display', 'table-cell').css('width', 'auto').css('min-width', 0);\n      });\n      $('<tr/>').append(cells).appendTo(clonedFooter);\n    });\n\n    // In the inline case extra padding is applied to the first column to\n    // give space for the show / hide icon. We need to use this in the\n    // calculation\n    if (this.c.details.type === 'inline') {\n      $(clonedTable).addClass('dtr-inline collapsed');\n    }\n\n    // It is unsafe to insert elements with the same name into the DOM\n    // multiple times. For example, cloning and inserting a checked radio\n    // clears the chcecked state of the original radio.\n    $(clonedTable).find('[name]').removeAttr('name');\n\n    // A position absolute table would take the table out of the flow of\n    // our container element, bypassing the height and width (Scroller)\n    $(clonedTable).css('position', 'relative');\n    var inserted = $('<div/>').css({\n      width: 1,\n      height: 1,\n      overflow: 'hidden',\n      clear: 'both'\n    }).append(clonedTable);\n    inserted.insertBefore(dt.table().node());\n\n    // The cloned table now contains the smallest that each column can be\n    emptyRow.children().each(function (i) {\n      var idx = dt.column.index('fromVisible', i);\n      columns[idx].minWidth = this.offsetWidth || 0;\n    });\n    inserted.remove();\n  },\n  /**\n   * Get the state of the current hidden columns - controlled by Responsive only\n   */\n  _responsiveOnlyHidden: function () {\n    var dt = this.s.dt;\n    return $.map(this.s.current, function (v, i) {\n      // If the column is hidden by DataTables then it can't be hidden by\n      // Responsive!\n      if (dt.column(i).visible() === false) {\n        return true;\n      }\n      return v;\n    });\n  },\n  /**\n   * Set a column's visibility.\n   *\n   * We don't use DataTables' column visibility controls in order to ensure\n   * that column visibility can Responsive can no-exist. Since only IE8+ is\n   * supported (and all evergreen browsers of course) the control of the\n   * display attribute works well.\n   *\n   * @param {integer} col      Column index\n   * @param {boolean} showHide Show or hide (true or false)\n   * @private\n   */\n  _setColumnVis: function (col, showHide) {\n    var that = this;\n    var dt = this.s.dt;\n    var display = showHide ? '' : 'none'; // empty string will remove the attr\n\n    this._setHeaderVis(col, showHide, dt.table().header.structure());\n    this._setHeaderVis(col, showHide, dt.table().footer.structure());\n    dt.column(col).nodes().to$().css('display', display).toggleClass('dtr-hidden', !showHide);\n\n    // If the are child nodes stored, we might need to reinsert them\n    if (!$.isEmptyObject(this.s.childNodeStore)) {\n      dt.cells(null, col).indexes().each(function (idx) {\n        that._childNodesRestore(dt, idx.row, idx.column);\n      });\n    }\n  },\n  /**\n   * Set the a column's visibility, taking into account multiple rows\n   * in a header / footer and colspan attributes\n   * @param {*} col\n   * @param {*} showHide\n   * @param {*} structure\n   */\n  _setHeaderVis: function (col, showHide, structure) {\n    var that = this;\n    var display = showHide ? '' : 'none';\n    structure.forEach(function (row) {\n      if (row[col]) {\n        $(row[col].cell).css('display', display).toggleClass('dtr-hidden', !showHide);\n      } else {\n        // In a colspan - need to rewind calc the new span since\n        // display:none elements do not count as being spanned over\n        var search = col;\n        while (search >= 0) {\n          if (row[search]) {\n            row[search].cell.colSpan = that._colspan(row, search);\n            break;\n          }\n          search--;\n        }\n      }\n    });\n  },\n  /**\n   * How many columns should this cell span\n   *\n   * @param {*} row Header structure row\n   * @param {*} idx The column index of the cell to span\n   */\n  _colspan: function (row, idx) {\n    var colspan = 1;\n    for (var col = idx + 1; col < row.length; col++) {\n      if (row[col] === null && this.s.current[col]) {\n        // colspan and not hidden by Responsive\n        colspan++;\n      } else if (row[col]) {\n        // Got the next cell, jump out\n        break;\n      }\n    }\n    return colspan;\n  },\n  /**\n   * Update the cell tab indexes for keyboard accessibility. This is called on\n   * every table draw - that is potentially inefficient, but also the least\n   * complex option given that column visibility can change on the fly. Its a\n   * shame user-focus was removed from CSS 3 UI, as it would have solved this\n   * issue with a single CSS statement.\n   *\n   * @private\n   */\n  _tabIndexes: function () {\n    var dt = this.s.dt;\n    var cells = dt.cells({\n      page: 'current'\n    }).nodes().to$();\n    var ctx = dt.settings()[0];\n    var target = this.c.details.target;\n    cells.filter('[data-dtr-keyboard]').removeData('[data-dtr-keyboard]');\n    if (typeof target === 'number') {\n      dt.cells(null, target, {\n        page: 'current'\n      }).nodes().to$().attr('tabIndex', ctx.iTabIndex).data('dtr-keyboard', 1);\n    } else {\n      // This is a bit of a hack - we need to limit the selected nodes to just\n      // those of this table\n      if (target === 'td:first-child, th:first-child') {\n        target = '>td:first-child, >th:first-child';\n      }\n      $(target, dt.rows({\n        page: 'current'\n      }).nodes()).attr('tabIndex', ctx.iTabIndex).data('dtr-keyboard', 1);\n    }\n  }\n});\n\n/**\n * List of default breakpoints. Each item in the array is an object with two\n * properties:\n *\n * * `name` - the breakpoint name.\n * * `width` - the breakpoint width\n *\n * @name Responsive.breakpoints\n * @static\n */\nResponsive.breakpoints = [{\n  name: 'desktop',\n  width: Infinity\n}, {\n  name: 'tablet-l',\n  width: 1024\n}, {\n  name: 'tablet-p',\n  width: 768\n}, {\n  name: 'mobile-l',\n  width: 480\n}, {\n  name: 'mobile-p',\n  width: 320\n}];\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.display = {\n  childRow: function (row, update, render) {\n    var rowNode = $(row.node());\n    if (update) {\n      if (rowNode.hasClass('dtr-expanded')) {\n        row.child(render(), 'child').show();\n        return true;\n      }\n    } else {\n      if (!rowNode.hasClass('dtr-expanded')) {\n        var rendered = render();\n        if (rendered === false) {\n          return false;\n        }\n        row.child(rendered, 'child').show();\n        return true;\n      } else {\n        row.child(false);\n        return false;\n      }\n    }\n  },\n  childRowImmediate: function (row, update, render) {\n    var rowNode = $(row.node());\n    if (!update && rowNode.hasClass('dtr-expanded') || !row.responsive.hasHidden()) {\n      // User interaction and the row is show, or nothing to show\n      row.child(false);\n      return false;\n    } else {\n      // Display\n      var rendered = render();\n      if (rendered === false) {\n        return false;\n      }\n      row.child(rendered, 'child').show();\n      return true;\n    }\n  },\n  // This is a wrapper so the modal options for Bootstrap and jQuery UI can\n  // have options passed into them. This specific one doesn't need to be a\n  // function but it is for consistency in the `modal` name\n  modal: function (options) {\n    return function (row, update, render, closeCallback) {\n      var modal;\n      var rendered = render();\n      if (rendered === false) {\n        return false;\n      }\n      if (!update) {\n        // Show a modal\n        var close = function () {\n          modal.remove(); // will tidy events for us\n          $(document).off('keypress.dtr');\n          $(row.node()).removeClass('dtr-expanded');\n          closeCallback();\n        };\n        modal = $('<div class=\"dtr-modal\"/>').append($('<div class=\"dtr-modal-display\"/>').append($('<div class=\"dtr-modal-content\"/>').data('dtr-row-idx', row.index()).append(rendered)).append($('<div class=\"dtr-modal-close\">&times;</div>').click(function () {\n          close();\n        }))).append($('<div class=\"dtr-modal-background\"/>').click(function () {\n          close();\n        })).appendTo('body');\n        $(row.node()).addClass('dtr-expanded');\n        $(document).on('keyup.dtr', function (e) {\n          if (e.keyCode === 27) {\n            e.stopPropagation();\n            close();\n          }\n        });\n      } else {\n        modal = $('div.dtr-modal-content');\n        if (modal.length && row.index() === modal.data('dtr-row-idx')) {\n          modal.empty().append(rendered);\n        } else {\n          // Modal not shown, nothing to update\n          return null;\n        }\n      }\n      if (options && options.header) {\n        $('div.dtr-modal-content').prepend('<h2>' + options.header(row) + '</h2>');\n      }\n      return true;\n    };\n  }\n};\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.renderer = {\n  listHiddenNodes: function () {\n    return function (api, rowIdx, columns) {\n      var that = this;\n      var ul = $('<ul data-dtr-index=\"' + rowIdx + '\" class=\"dtr-details\"/>');\n      var found = false;\n      $.each(columns, function (i, col) {\n        if (col.hidden) {\n          var klass = col.className ? 'class=\"' + col.className + '\"' : '';\n          $('<li ' + klass + ' data-dtr-index=\"' + col.columnIndex + '\" data-dt-row=\"' + col.rowIndex + '\" data-dt-column=\"' + col.columnIndex + '\">' + '<span class=\"dtr-title\">' + col.title + '</span> ' + '</li>').append($('<span class=\"dtr-data\"/>').append(that._childNodes(api, col.rowIndex, col.columnIndex))) // api.cell( col.rowIndex, col.columnIndex ).node().childNodes ) )\n          .appendTo(ul);\n          found = true;\n        }\n      });\n      return found ? ul : false;\n    };\n  },\n  listHidden: function () {\n    return function (api, rowIdx, columns) {\n      var data = $.map(columns, function (col) {\n        var klass = col.className ? 'class=\"' + col.className + '\"' : '';\n        return col.hidden ? '<li ' + klass + ' data-dtr-index=\"' + col.columnIndex + '\" data-dt-row=\"' + col.rowIndex + '\" data-dt-column=\"' + col.columnIndex + '\">' + '<span class=\"dtr-title\">' + col.title + '</span> ' + '<span class=\"dtr-data\">' + col.data + '</span>' + '</li>' : '';\n      }).join('');\n      return data ? $('<ul data-dtr-index=\"' + rowIdx + '\" class=\"dtr-details\"/>').append(data) : false;\n    };\n  },\n  tableAll: function (options) {\n    options = $.extend({\n      tableClass: ''\n    }, options);\n    return function (api, rowIdx, columns) {\n      var data = $.map(columns, function (col) {\n        var klass = col.className ? 'class=\"' + col.className + '\"' : '';\n        return '<tr ' + klass + ' data-dt-row=\"' + col.rowIndex + '\" data-dt-column=\"' + col.columnIndex + '\">' + '<td>' + col.title + ':' + '</td> ' + '<td>' + col.data + '</td>' + '</tr>';\n      }).join('');\n      return $('<table class=\"' + options.tableClass + ' dtr-details\" width=\"100%\"/>').append(data);\n    };\n  }\n};\n\n/**\n * Responsive default settings for initialisation\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.defaults = {\n  /**\n   * List of breakpoints for the instance. Note that this means that each\n   * instance can have its own breakpoints. Additionally, the breakpoints\n   * cannot be changed once an instance has been creased.\n   *\n   * @type {Array}\n   * @default Takes the value of `Responsive.breakpoints`\n   */\n  breakpoints: Responsive.breakpoints,\n  /**\n   * Enable / disable auto hiding calculations. It can help to increase\n   * performance slightly if you disable this option, but all columns would\n   * need to have breakpoint classes assigned to them\n   *\n   * @type {Boolean}\n   * @default  `true`\n   */\n  auto: true,\n  /**\n   * Details control. If given as a string value, the `type` property of the\n   * default object is set to that value, and the defaults used for the rest\n   * of the object - this is for ease of implementation.\n   *\n   * The object consists of the following properties:\n   *\n   * * `display` - A function that is used to show and hide the hidden details\n   * * `renderer` - function that is called for display of the child row data.\n   *   The default function will show the data from the hidden columns\n   * * `target` - Used as the selector for what objects to attach the child\n   *   open / close to\n   * * `type` - `false` to disable the details display, `inline` or `column`\n   *   for the two control types\n   *\n   * @type {Object|string}\n   */\n  details: {\n    display: Responsive.display.childRow,\n    renderer: Responsive.renderer.listHidden(),\n    target: 0,\n    type: 'inline'\n  },\n  /**\n   * Orthogonal data request option. This is used to define the data type\n   * requested when Responsive gets the data to show in the child row.\n   *\n   * @type {String}\n   */\n  orthogonal: 'display'\n};\n\n/*\n * API\n */\nvar Api = $.fn.dataTable.Api;\n\n// Doesn't do anything - work around for a bug in DT... Not documented\nApi.register('responsive()', function () {\n  return this;\n});\nApi.register('responsive.index()', function (li) {\n  li = $(li);\n  return {\n    column: li.data('dtr-index'),\n    row: li.parent().data('dtr-index')\n  };\n});\nApi.register('responsive.rebuild()', function () {\n  return this.iterator('table', function (ctx) {\n    if (ctx._responsive) {\n      ctx._responsive._classLogic();\n    }\n  });\n});\nApi.register('responsive.recalc()', function () {\n  return this.iterator('table', function (ctx) {\n    if (ctx._responsive) {\n      ctx._responsive._resizeAuto();\n      ctx._responsive._resize();\n    }\n  });\n});\nApi.register('responsive.hasHidden()', function () {\n  var ctx = this.context[0];\n  return ctx._responsive ? $.inArray(false, ctx._responsive._responsiveOnlyHidden()) !== -1 : false;\n});\nApi.registerPlural('columns().responsiveHidden()', 'column().responsiveHidden()', function () {\n  return this.iterator('column', function (settings, column) {\n    return settings._responsive ? settings._responsive._responsiveOnlyHidden()[column] : false;\n  }, 1);\n});\n\n/**\n * Version information\n *\n * @name Responsive.version\n * @static\n */\nResponsive.version = '3.0.2';\n$.fn.dataTable.Responsive = Responsive;\n$.fn.DataTable.Responsive = Responsive;\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on('preInit.dt.dtr', function (e, settings, json) {\n  if (e.namespace !== 'dt') {\n    return;\n  }\n  if ($(settings.nTable).hasClass('responsive') || $(settings.nTable).hasClass('dt-responsive') || settings.oInit.responsive || DataTable.defaults.responsive) {\n    var init = settings.oInit.responsive;\n    if (init !== false) {\n      new Responsive(settings, $.isPlainObject(init) ? init : {});\n    }\n  }\n});\nexport default DataTable;","map":{"version":3,"names":["jQuery","DataTable","$","Responsive","settings","opts","versionCheck","s","childNodeStore","columns","current","dt","Api","responsive","details","type","c","extend","defaults","_constructor","prototype","that","oldWindowWidth","window","innerWidth","_responsive","on","util","throttle","width","_resize","e","tr","data","idx","inArray","each","i","column","index","css","addClass","off","table","body","cells","nodes","to$","removeClass","node","val","_setColumnVis","breakpoints","sort","a","b","_classLogic","_resizeAuto","_detailsInit","_timer","clearTimeout","setTimeout","_redrawChildren","d","curr","length","visible","indexOf","splice","rowIds","rows","every","child","isShown","push","id","one","_detailsDisplay","_controlClass","namespace","_colGroupAttach","colGroup","colEls","found","get","parentNode","insertBefore","append","_childNodes","row","col","name","children","cell","childNodes","ien","_childNodesRestore","store","parent","parentChildren","j","jen","appendChild","undefined","_columnsVisiblity","breakpoint","order","map","columnIdx","priority","display","auto","minWidth","includeIn","requiredWidth","scrolling","oScroll","bar","sY","sX","iBarWidth","widthAvailable","container","offsetWidth","usedWidth","control","empty","colIdx","showControl","never","eq","className","header","init","responsivePriority","dataPriority","getAttribute","match","add","operator","matched","size","_find","classNames","split","hasClass","k","ken","trim","brokenPoint","re","RegExp","columnsVis","firstVisible","page","filter","update","event","res","toggleClass","triggerHandler","renderer","call","_detailsObj","target","_tabIndexes","keyCode","click","selector","closest","toArray","targetIdx","trigger","rowIdx","dtCol","aoColumns","sClass","columnIndex","render","orthogonal","hidden","rowIndex","title","iterator","forceRedraw","oldVis","slice","collapsedClass","changed","dtSettings","colEl","detach","adjust","_responsiveOnlyHidden","info","recordsDisplay","attr","visibleColumns","indexes","clonedTable","cloneNode","clonedHeader","appendTo","clonedFooter","footer","clonedBody","clone","style","structure","forEach","el","emptyRow","count","rowIdx2","find","removeAttr","inserted","height","overflow","clear","remove","v","showHide","_setHeaderVis","isEmptyObject","search","colSpan","_colspan","colspan","ctx","removeData","iTabIndex","Infinity","childRow","rowNode","show","rendered","childRowImmediate","hasHidden","modal","options","closeCallback","close","document","stopPropagation","prepend","listHiddenNodes","api","ul","klass","listHidden","join","tableAll","tableClass","fn","dataTable","register","li","context","registerPlural","version","json","nTable","oInit","isPlainObject"],"sources":["C:/Users/loisa/Documents/Matrice/acara-admin/node_modules/datatables.net-responsive/js/dataTables.responsive.mjs"],"sourcesContent":["/*! Responsive 3.0.2\n * Â© SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\nimport DataTable from 'datatables.net';\n\n// Allow reassignment of the $ variable\nlet $ = jQuery;\n\n\n/**\n * @summary     Responsive\n * @description Responsive tables plug-in for DataTables\n * @version     3.0.2\n * @author      SpryMedia Ltd\n * @copyright   SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/**\n * Responsive is a plug-in for the DataTables library that makes use of\n * DataTables' ability to change the visibility of columns, changing the\n * visibility of columns so the displayed columns fit into the table container.\n * The end result is that complex tables will be dynamically adjusted to fit\n * into the viewport, be it on a desktop, tablet or mobile browser.\n *\n * Responsive for DataTables has two modes of operation, which can used\n * individually or combined:\n *\n * * Class name based control - columns assigned class names that match the\n *   breakpoint logic can be shown / hidden as required for each breakpoint.\n * * Automatic control - columns are automatically hidden when there is no\n *   room left to display them. Columns removed from the right.\n *\n * In additional to column visibility control, Responsive also has built into\n * options to use DataTables' child row display to show / hide the information\n * from the table that has been hidden. There are also two modes of operation\n * for this child row display:\n *\n * * Inline - when the control element that the user can use to show / hide\n *   child rows is displayed inside the first column of the table.\n * * Column - where a whole column is dedicated to be the show / hide control.\n *\n * Initialisation of Responsive is performed by:\n *\n * * Adding the class `responsive` or `dt-responsive` to the table. In this case\n *   Responsive will automatically be initialised with the default configuration\n *   options when the DataTable is created.\n * * Using the `responsive` option in the DataTables configuration options. This\n *   can also be used to specify the configuration options, or simply set to\n *   `true` to use the defaults.\n *\n *  @class\n *  @param {object} settings DataTables settings object for the host table\n *  @param {object} [opts] Configuration options\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.10.3+\n *\n *  @example\n *      $('#example').DataTable( {\n *        responsive: true\n *      } );\n *    } );\n */\nvar Responsive = function (settings, opts) {\n\t// Sanity check that we are using DataTables 1.10 or newer\n\tif (!DataTable.versionCheck || !DataTable.versionCheck('2')) {\n\t\tthrow 'DataTables Responsive requires DataTables 2 or newer';\n\t}\n\n\tthis.s = {\n\t\tchildNodeStore: {},\n\t\tcolumns: [],\n\t\tcurrent: [],\n\t\tdt: new DataTable.Api(settings)\n\t};\n\n\t// Check if responsive has already been initialised on this table\n\tif (this.s.dt.settings()[0].responsive) {\n\t\treturn;\n\t}\n\n\t// details is an object, but for simplicity the user can give it as a string\n\t// or a boolean\n\tif (opts && typeof opts.details === 'string') {\n\t\topts.details = { type: opts.details };\n\t}\n\telse if (opts && opts.details === false) {\n\t\topts.details = { type: false };\n\t}\n\telse if (opts && opts.details === true) {\n\t\topts.details = { type: 'inline' };\n\t}\n\n\tthis.c = $.extend(\n\t\ttrue,\n\t\t{},\n\t\tResponsive.defaults,\n\t\tDataTable.defaults.responsive,\n\t\topts\n\t);\n\tsettings.responsive = this;\n\tthis._constructor();\n};\n\n$.extend(Responsive.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Initialise the Responsive instance\n\t *\n\t * @private\n\t */\n\t_constructor: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar oldWindowWidth = $(window).innerWidth();\n\n\t\tdt.settings()[0]._responsive = this;\n\n\t\t// Use DataTables' throttle function to avoid processor thrashing\n\t\t$(window).on(\n\t\t\t'orientationchange.dtr',\n\t\t\tDataTable.util.throttle(function () {\n\t\t\t\t// iOS has a bug whereby resize can fire when only scrolling\n\t\t\t\t// See: http://stackoverflow.com/questions/8898412\n\t\t\t\tvar width = $(window).innerWidth();\n\n\t\t\t\tif (width !== oldWindowWidth) {\n\t\t\t\t\tthat._resize();\n\t\t\t\t\toldWindowWidth = width;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\t// Handle new rows being dynamically added - needed as responsive\n\t\t// updates all rows (shown or not) a responsive change, rather than\n\t\t// per draw.\n\t\tdt.on('row-created.dtr', function (e, tr, data, idx) {\n\t\t\tif ($.inArray(false, that.s.current) !== -1) {\n\t\t\t\t$('>td, >th', tr).each(function (i) {\n\t\t\t\t\tvar idx = dt.column.index('toData', i);\n\n\t\t\t\t\tif (that.s.current[idx] === false) {\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.css('display', 'none')\n\t\t\t\t\t\t\t.addClass('dtr-hidden');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// Destroy event handler\n\t\tdt.on('destroy.dtr', function () {\n\t\t\tdt.off('.dtr');\n\t\t\t$(dt.table().body()).off('.dtr');\n\t\t\t$(window).off('resize.dtr orientationchange.dtr');\n\t\t\tdt.cells('.dtr-control').nodes().to$().removeClass('dtr-control');\n\t\t\t$(dt.table().node()).removeClass('dtr-inline collapsed');\n\n\t\t\t// Restore the columns that we've hidden\n\t\t\t$.each(that.s.current, function (i, val) {\n\t\t\t\tif (val === false) {\n\t\t\t\t\tthat._setColumnVis(i, true);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Reorder the breakpoints array here in case they have been added out\n\t\t// of order\n\t\tthis.c.breakpoints.sort(function (a, b) {\n\t\t\treturn a.width < b.width ? 1 : a.width > b.width ? -1 : 0;\n\t\t});\n\n\t\tthis._classLogic();\n\t\tthis._resizeAuto();\n\n\t\t// Details handler\n\t\tvar details = this.c.details;\n\n\t\tif (details.type !== false) {\n\t\t\tthat._detailsInit();\n\n\t\t\t// DataTables will trigger this event on every column it shows and\n\t\t\t// hides individually\n\t\t\tdt.on('column-visibility.dtr', function () {\n\t\t\t\t// Use a small debounce to allow multiple columns to be set together\n\t\t\t\tif (that._timer) {\n\t\t\t\t\tclearTimeout(that._timer);\n\t\t\t\t}\n\n\t\t\t\tthat._timer = setTimeout(function () {\n\t\t\t\t\tthat._timer = null;\n\n\t\t\t\t\tthat._classLogic();\n\t\t\t\t\tthat._resizeAuto();\n\t\t\t\t\tthat._resize(true);\n\n\t\t\t\t\tthat._redrawChildren();\n\t\t\t\t}, 100);\n\t\t\t});\n\n\t\t\t// Redraw the details box on each draw which will happen if the data\n\t\t\t// has changed. This is used until DataTables implements a native\n\t\t\t// `updated` event for rows\n\t\t\tdt.on('draw.dtr', function () {\n\t\t\t\tthat._redrawChildren();\n\t\t\t});\n\n\t\t\t$(dt.table().node()).addClass('dtr-' + details.type);\n\t\t}\n\n\t\tdt.on('column-reorder.dtr', function (e, settings, details) {\n\t\t\tthat._classLogic();\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize(true);\n\t\t});\n\n\t\t// Change in column sizes means we need to calc\n\t\tdt.on('column-sizing.dtr', function () {\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\t\t});\n\n\t\t// DT2 let's us tell it if we are hiding columns\n\t\tdt.on('column-calc.dt', function (e, d) {\n\t\t\tvar curr = that.s.current;\n\n\t\t\tfor (var i = 0; i < curr.length; i++) {\n\t\t\t\tvar idx = d.visible.indexOf(i);\n\n\t\t\t\tif (curr[i] === false && idx >= 0) {\n\t\t\t\t\td.visible.splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// On Ajax reload we want to reopen any child rows which are displayed\n\t\t// by responsive\n\t\tdt.on('preXhr.dtr', function () {\n\t\t\tvar rowIds = [];\n\t\t\tdt.rows().every(function () {\n\t\t\t\tif (this.child.isShown()) {\n\t\t\t\t\trowIds.push(this.id(true));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdt.one('draw.dtr', function () {\n\t\t\t\tthat._resizeAuto();\n\t\t\t\tthat._resize();\n\n\t\t\t\tdt.rows(rowIds).every(function () {\n\t\t\t\t\tthat._detailsDisplay(this, false);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tdt.on('draw.dtr', function () {\n\t\t\tthat._controlClass();\n\t\t}).on('init.dtr', function (e, settings, details) {\n\t\t\tif (e.namespace !== 'dt') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\t\t});\n\n\t\t// First pass - draw the table for the current viewport size\n\t\tthis._resize();\n\t},\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Insert a `col` tag into the correct location in a `colgroup`.\n\t *\n\t * @param {jQuery} colGroup The `colgroup` tag\n\t * @param {jQuery} colEl The `col` tag\n\t */\n\t_colGroupAttach: function (colGroup, colEls, idx) {\n\t\tvar found = null;\n\n\t\t// No need to do anything if already attached\n\t\tif (colEls[idx].get(0).parentNode === colGroup[0]) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Find the first `col` after our own which is already attached\n\t\tfor (var i = idx+1; i < colEls.length; i++) {\n\t\t\tif (colGroup[0] === colEls[i].get(0).parentNode) {\n\t\t\t\tfound = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (found !== null) {\n\t\t\t// Insert before\n\t\t\tcolEls[idx].insertBefore(colEls[found][0]);\n\t\t}\n\t\telse {\n\t\t\t// If wasn't found, insert at the end\n\t\t\tcolGroup.append(colEls[idx]);\n\t\t}\n\t},\n\n\t/**\n\t * Get and store nodes from a cell - use for node moving renderers\n\t *\n\t * @param {*} dt DT instance\n\t * @param {*} row Row index\n\t * @param {*} col Column index\n\t */\n\t_childNodes: function (dt, row, col) {\n\t\tvar name = row + '-' + col;\n\n\t\tif (this.s.childNodeStore[name]) {\n\t\t\treturn this.s.childNodeStore[name];\n\t\t}\n\n\t\t// https://jsperf.com/childnodes-array-slice-vs-loop\n\t\tvar nodes = [];\n\t\tvar children = dt.cell(row, col).node().childNodes;\n\t\tfor (var i = 0, ien = children.length; i < ien; i++) {\n\t\t\tnodes.push(children[i]);\n\t\t}\n\n\t\tthis.s.childNodeStore[name] = nodes;\n\n\t\treturn nodes;\n\t},\n\n\t/**\n\t * Restore nodes from the cache to a table cell\n\t *\n\t * @param {*} dt DT instance\n\t * @param {*} row Row index\n\t * @param {*} col Column index\n\t */\n\t_childNodesRestore: function (dt, row, col) {\n\t\tvar name = row + '-' + col;\n\n\t\tif (!this.s.childNodeStore[name]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar node = dt.cell(row, col).node();\n\t\tvar store = this.s.childNodeStore[name];\n\t\tif (store.length > 0) {\n\t\t\tvar parent = store[0].parentNode;\n\t\t\tvar parentChildren = parent.childNodes;\n\t\t\tvar a = [];\n\n\t\t\tfor (var i = 0, ien = parentChildren.length; i < ien; i++) {\n\t\t\t\ta.push(parentChildren[i]);\n\t\t\t}\n\n\t\t\tfor (var j = 0, jen = a.length; j < jen; j++) {\n\t\t\t\tnode.appendChild(a[j]);\n\t\t\t}\n\t\t}\n\n\t\tthis.s.childNodeStore[name] = undefined;\n\t},\n\n\t/**\n\t * Calculate the visibility for the columns in a table for a given\n\t * breakpoint. The result is pre-determined based on the class logic if\n\t * class names are used to control all columns, but the width of the table\n\t * is also used if there are columns which are to be automatically shown\n\t * and hidden.\n\t *\n\t * @param  {string} breakpoint Breakpoint name to use for the calculation\n\t * @return {array} Array of boolean values initiating the visibility of each\n\t *   column.\n\t *  @private\n\t */\n\t_columnsVisiblity: function (breakpoint) {\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\n\t\t// Create an array that defines the column ordering based first on the\n\t\t// column's priority, and secondly the column index. This allows the\n\t\t// columns to be removed from the right if the priority matches\n\t\tvar order = columns\n\t\t\t.map(function (col, idx) {\n\t\t\t\treturn {\n\t\t\t\t\tcolumnIdx: idx,\n\t\t\t\t\tpriority: col.priority\n\t\t\t\t};\n\t\t\t})\n\t\t\t.sort(function (a, b) {\n\t\t\t\tif (a.priority !== b.priority) {\n\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t}\n\t\t\t\treturn a.columnIdx - b.columnIdx;\n\t\t\t});\n\n\t\t// Class logic - determine which columns are in this breakpoint based\n\t\t// on the classes. If no class control (i.e. `auto`) then `-` is used\n\t\t// to indicate this to the rest of the function\n\t\tvar display = $.map(columns, function (col, i) {\n\t\t\tif (dt.column(i).visible() === false) {\n\t\t\t\treturn 'not-visible';\n\t\t\t}\n\t\t\treturn col.auto && col.minWidth === null\n\t\t\t\t? false\n\t\t\t\t: col.auto === true\n\t\t\t\t? '-'\n\t\t\t\t: $.inArray(breakpoint, col.includeIn) !== -1;\n\t\t});\n\n\t\t// Auto column control - first pass: how much width is taken by the\n\t\t// ones that must be included from the non-auto columns\n\t\tvar requiredWidth = 0;\n\t\tfor (i = 0, ien = display.length; i < ien; i++) {\n\t\t\tif (display[i] === true) {\n\t\t\t\trequiredWidth += columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Second pass, use up any remaining width for other columns. For\n\t\t// scrolling tables we need to subtract the width of the scrollbar. It\n\t\t// may not be requires which makes this sub-optimal, but it would\n\t\t// require another full redraw to make complete use of those extra few\n\t\t// pixels\n\t\tvar scrolling = dt.settings()[0].oScroll;\n\t\tvar bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;\n\t\tvar widthAvailable = dt.table().container().offsetWidth - bar;\n\t\tvar usedWidth = widthAvailable - requiredWidth;\n\n\t\t// Control column needs to always be included. This makes it sub-\n\t\t// optimal in terms of using the available with, but to stop layout\n\t\t// thrashing or overflow. Also we need to account for the control column\n\t\t// width first so we know how much width is available for the other\n\t\t// columns, since the control column might not be the first one shown\n\t\tfor (i = 0, ien = display.length; i < ien; i++) {\n\t\t\tif (columns[i].control) {\n\t\t\t\tusedWidth -= columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Allow columns to be shown (counting by priority and then right to\n\t\t// left) until we run out of room\n\t\tvar empty = false;\n\t\tfor (i = 0, ien = order.length; i < ien; i++) {\n\t\t\tvar colIdx = order[i].columnIdx;\n\n\t\t\tif (\n\t\t\t\tdisplay[colIdx] === '-' &&\n\t\t\t\t!columns[colIdx].control &&\n\t\t\t\tcolumns[colIdx].minWidth\n\t\t\t) {\n\t\t\t\t// Once we've found a column that won't fit we don't let any\n\t\t\t\t// others display either, or columns might disappear in the\n\t\t\t\t// middle of the table\n\t\t\t\tif (empty || usedWidth - columns[colIdx].minWidth < 0) {\n\t\t\t\t\tempty = true;\n\t\t\t\t\tdisplay[colIdx] = false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdisplay[colIdx] = true;\n\t\t\t\t}\n\n\t\t\t\tusedWidth -= columns[colIdx].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Determine if the 'control' column should be shown (if there is one).\n\t\t// This is the case when there is a hidden column (that is not the\n\t\t// control column). The two loops look inefficient here, but they are\n\t\t// trivial and will fly through. We need to know the outcome from the\n\t\t// first , before the action in the second can be taken\n\t\tvar showControl = false;\n\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tif (\n\t\t\t\t!columns[i].control &&\n\t\t\t\t!columns[i].never &&\n\t\t\t\tdisplay[i] === false\n\t\t\t) {\n\t\t\t\tshowControl = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tif (columns[i].control) {\n\t\t\t\tdisplay[i] = showControl;\n\t\t\t}\n\n\t\t\t// Replace not visible string with false from the control column detection above\n\t\t\tif (display[i] === 'not-visible') {\n\t\t\t\tdisplay[i] = false;\n\t\t\t}\n\t\t}\n\n\t\t// Finally we need to make sure that there is at least one column that\n\t\t// is visible\n\t\tif ($.inArray(true, display) === -1) {\n\t\t\tdisplay[0] = true;\n\t\t}\n\n\t\treturn display;\n\t},\n\n\t/**\n\t * Create the internal `columns` array with information about the columns\n\t * for the table. This includes determining which breakpoints the column\n\t * will appear in, based upon class names in the column, which makes up the\n\t * vast majority of this method.\n\t *\n\t * @private\n\t */\n\t_classLogic: function () {\n\t\tvar that = this;\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar dt = this.s.dt;\n\t\tvar columns = dt\n\t\t\t.columns()\n\t\t\t.eq(0)\n\t\t\t.map(function (i) {\n\t\t\t\tvar column = this.column(i);\n\t\t\t\tvar className = column.header().className;\n\t\t\t\tvar priority = column.init().responsivePriority;\n\t\t\t\tvar dataPriority = column\n\t\t\t\t\t.header()\n\t\t\t\t\t.getAttribute('data-priority');\n\n\t\t\t\tif (priority === undefined) {\n\t\t\t\t\tpriority =\n\t\t\t\t\t\tdataPriority === undefined || dataPriority === null\n\t\t\t\t\t\t\t? 10000\n\t\t\t\t\t\t\t: dataPriority * 1;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tclassName: className,\n\t\t\t\t\tincludeIn: [],\n\t\t\t\t\tauto: false,\n\t\t\t\t\tcontrol: false,\n\t\t\t\t\tnever: className.match(/\\b(dtr\\-)?never\\b/) ? true : false,\n\t\t\t\t\tpriority: priority\n\t\t\t\t};\n\t\t\t});\n\n\t\t// Simply add a breakpoint to `includeIn` array, ensuring that there are\n\t\t// no duplicates\n\t\tvar add = function (colIdx, name) {\n\t\t\tvar includeIn = columns[colIdx].includeIn;\n\n\t\t\tif ($.inArray(name, includeIn) === -1) {\n\t\t\t\tincludeIn.push(name);\n\t\t\t}\n\t\t};\n\n\t\tvar column = function (colIdx, name, operator, matched) {\n\t\t\tvar size, i, ien;\n\n\t\t\tif (!operator) {\n\t\t\t\tcolumns[colIdx].includeIn.push(name);\n\t\t\t}\n\t\t\telse if (operator === 'max-') {\n\t\t\t\t// Add this breakpoint and all smaller\n\t\t\t\tsize = that._find(name).width;\n\n\t\t\t\tfor (i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\t\t\tif (breakpoints[i].width <= size) {\n\t\t\t\t\t\tadd(colIdx, breakpoints[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (operator === 'min-') {\n\t\t\t\t// Add this breakpoint and all larger\n\t\t\t\tsize = that._find(name).width;\n\n\t\t\t\tfor (i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\t\t\tif (breakpoints[i].width >= size) {\n\t\t\t\t\t\tadd(colIdx, breakpoints[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (operator === 'not-') {\n\t\t\t\t// Add all but this breakpoint\n\t\t\t\tfor (i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\t\t\tif (breakpoints[i].name.indexOf(matched) === -1) {\n\t\t\t\t\t\tadd(colIdx, breakpoints[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop over each column and determine if it has a responsive control\n\t\t// class\n\t\tcolumns.each(function (col, i) {\n\t\t\tvar classNames = col.className.split(' ');\n\t\t\tvar hasClass = false;\n\n\t\t\t// Split the class name up so multiple rules can be applied if needed\n\t\t\tfor (var k = 0, ken = classNames.length; k < ken; k++) {\n\t\t\t\tvar className = classNames[k].trim();\n\n\t\t\t\tif (className === 'all' || className === 'dtr-all') {\n\t\t\t\t\t// Include in all\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.includeIn = $.map(breakpoints, function (a) {\n\t\t\t\t\t\treturn a.name;\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if (\n\t\t\t\t\tclassName === 'none' ||\n\t\t\t\t\tclassName === 'dtr-none' ||\n\t\t\t\t\tcol.never\n\t\t\t\t) {\n\t\t\t\t\t// Include in none (default) and no auto\n\t\t\t\t\thasClass = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if (\n\t\t\t\t\tclassName === 'control' ||\n\t\t\t\t\tclassName === 'dtr-control'\n\t\t\t\t) {\n\t\t\t\t\t// Special column that is only visible, when one of the other\n\t\t\t\t\t// columns is hidden. This is used for the details control\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.control = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$.each(breakpoints, function (j, breakpoint) {\n\t\t\t\t\t// Does this column have a class that matches this breakpoint?\n\t\t\t\t\tvar brokenPoint = breakpoint.name.split('-');\n\t\t\t\t\tvar re = new RegExp(\n\t\t\t\t\t\t'(min\\\\-|max\\\\-|not\\\\-)?(' +\n\t\t\t\t\t\t\tbrokenPoint[0] +\n\t\t\t\t\t\t\t')(\\\\-[_a-zA-Z0-9])?'\n\t\t\t\t\t);\n\t\t\t\t\tvar match = className.match(re);\n\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\thasClass = true;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tmatch[2] === brokenPoint[0] &&\n\t\t\t\t\t\t\tmatch[3] === '-' + brokenPoint[1]\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Class name matches breakpoint name fully\n\t\t\t\t\t\t\tcolumn(\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\tbreakpoint.name,\n\t\t\t\t\t\t\t\tmatch[1],\n\t\t\t\t\t\t\t\tmatch[2] + match[3]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (match[2] === brokenPoint[0] && !match[3]) {\n\t\t\t\t\t\t\t// Class name matched primary breakpoint name with no qualifier\n\t\t\t\t\t\t\tcolumn(i, breakpoint.name, match[1], match[2]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If there was no control class, then automatic sizing is used\n\t\t\tif (!hasClass) {\n\t\t\t\tcol.auto = true;\n\t\t\t}\n\t\t});\n\n\t\tthis.s.columns = columns;\n\t},\n\n\t/**\n\t * Update the cells to show the correct control class / button\n\t * @private\n\t */\n\t_controlClass: function () {\n\t\tif (this.c.details.type === 'inline') {\n\t\t\tvar dt = this.s.dt;\n\t\t\tvar columnsVis = this.s.current;\n\t\t\tvar firstVisible = $.inArray(true, columnsVis);\n\n\t\t\t// Remove from any cells which shouldn't have it\n\t\t\tdt.cells(\n\t\t\t\tnull,\n\t\t\t\tfunction (idx) {\n\t\t\t\t\treturn idx !== firstVisible;\n\t\t\t\t},\n\t\t\t\t{ page: 'current' }\n\t\t\t)\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.filter('.dtr-control')\n\t\t\t\t.removeClass('dtr-control');\n\n\t\t\tdt.cells(null, firstVisible, { page: 'current' })\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.addClass('dtr-control');\n\t\t}\n\t},\n\n\t/**\n\t * Show the details for the child row\n\t *\n\t * @param  {DataTables.Api} row    API instance for the row\n\t * @param  {boolean}        update Update flag\n\t * @private\n\t */\n\t_detailsDisplay: function (row, update) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar details = this.c.details;\n\t\tvar event = function (res) {\n\t\t\t$(row.node()).toggleClass('dtr-expanded', res !== false);\n\t\t\t$(dt.table().node()).triggerHandler('responsive-display.dt', [\n\t\t\t\tdt,\n\t\t\t\trow,\n\t\t\t\tres,\n\t\t\t\tupdate\n\t\t\t]);\n\t\t};\n\n\t\tif (details && details.type !== false) {\n\t\t\tvar renderer =\n\t\t\t\ttypeof details.renderer === 'string'\n\t\t\t\t\t? Responsive.renderer[details.renderer]()\n\t\t\t\t\t: details.renderer;\n\n\t\t\tvar res = details.display(\n\t\t\t\trow,\n\t\t\t\tupdate,\n\t\t\t\tfunction () {\n\t\t\t\t\treturn renderer.call(\n\t\t\t\t\t\tthat,\n\t\t\t\t\t\tdt,\n\t\t\t\t\t\trow[0][0],\n\t\t\t\t\t\tthat._detailsObj(row[0])\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tevent(false);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (typeof res === 'boolean') {\n\t\t\t\tevent(res);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Initialisation for the details handler\n\t *\n\t * @private\n\t */\n\t_detailsInit: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\t// The inline type always uses the first child as the target\n\t\tif (details.type === 'inline') {\n\t\t\tdetails.target = 'td.dtr-control, th.dtr-control';\n\t\t}\n\n\t\t// Keyboard accessibility\n\t\tdt.on('draw.dtr', function () {\n\t\t\tthat._tabIndexes();\n\t\t});\n\t\tthat._tabIndexes(); // Initial draw has already happened\n\n\t\t$(dt.table().body()).on('keyup.dtr', 'td, th', function (e) {\n\t\t\tif (e.keyCode === 13 && $(this).data('dtr-keyboard')) {\n\t\t\t\t$(this).click();\n\t\t\t}\n\t\t});\n\n\t\t// type.target can be a string jQuery selector or a column index\n\t\tvar target = details.target;\n\t\tvar selector = typeof target === 'string' ? target : 'td, th';\n\n\t\tif (target !== undefined || target !== null) {\n\t\t\t// Click handler to show / hide the details rows when they are available\n\t\t\t$(dt.table().body()).on(\n\t\t\t\t'click.dtr mousedown.dtr mouseup.dtr',\n\t\t\t\tselector,\n\t\t\t\tfunction (e) {\n\t\t\t\t\t// If the table is not collapsed (i.e. there is no hidden columns)\n\t\t\t\t\t// then take no action\n\t\t\t\t\tif (!$(dt.table().node()).hasClass('collapsed')) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check that the row is actually a DataTable's controlled node\n\t\t\t\t\tif (\n\t\t\t\t\t\t$.inArray(\n\t\t\t\t\t\t\t$(this).closest('tr').get(0),\n\t\t\t\t\t\t\tdt.rows().nodes().toArray()\n\t\t\t\t\t\t) === -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// For column index, we determine if we should act or not in the\n\t\t\t\t\t// handler - otherwise it is already okay\n\t\t\t\t\tif (typeof target === 'number') {\n\t\t\t\t\t\tvar targetIdx =\n\t\t\t\t\t\t\ttarget < 0\n\t\t\t\t\t\t\t\t? dt.columns().eq(0).length + target\n\t\t\t\t\t\t\t\t: target;\n\n\t\t\t\t\t\tif (dt.cell(this).index().column !== targetIdx) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// $().closest() includes itself in its check\n\t\t\t\t\tvar row = dt.row($(this).closest('tr'));\n\n\t\t\t\t\t// Check event type to do an action\n\t\t\t\t\tif (e.type === 'click') {\n\t\t\t\t\t\t// The renderer is given as a function so the caller can execute it\n\t\t\t\t\t\t// only when they need (i.e. if hiding there is no point is running\n\t\t\t\t\t\t// the renderer)\n\t\t\t\t\t\tthat._detailsDisplay(row, false);\n\t\t\t\t\t}\n\t\t\t\t\telse if (e.type === 'mousedown') {\n\t\t\t\t\t\t// For mouse users, prevent the focus ring from showing\n\t\t\t\t\t\t$(this).css('outline', 'none');\n\t\t\t\t\t}\n\t\t\t\t\telse if (e.type === 'mouseup') {\n\t\t\t\t\t\t// And then re-allow at the end of the click\n\t\t\t\t\t\t$(this).trigger('blur').css('outline', '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t},\n\n\t/**\n\t * Get the details to pass to a renderer for a row\n\t * @param  {int} rowIdx Row index\n\t * @private\n\t */\n\t_detailsObj: function (rowIdx) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map(this.s.columns, function (col, i) {\n\t\t\t// Never and control columns should not be passed to the renderer\n\t\t\tif (col.never || col.control) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar dtCol = dt.settings()[0].aoColumns[i];\n\n\t\t\treturn {\n\t\t\t\tclassName: dtCol.sClass,\n\t\t\t\tcolumnIndex: i,\n\t\t\t\tdata: dt.cell(rowIdx, i).render(that.c.orthogonal),\n\t\t\t\thidden: dt.column(i).visible() && !that.s.current[i],\n\t\t\t\trowIndex: rowIdx,\n\t\t\t\ttitle: dt.column(i).title()\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Find a breakpoint object from a name\n\t *\n\t * @param  {string} name Breakpoint name to find\n\t * @return {object}      Breakpoint description object\n\t * @private\n\t */\n\t_find: function (name) {\n\t\tvar breakpoints = this.c.breakpoints;\n\n\t\tfor (var i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\tif (breakpoints[i].name === name) {\n\t\t\t\treturn breakpoints[i];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Re-create the contents of the child rows as the display has changed in\n\t * some way.\n\t *\n\t * @private\n\t */\n\t_redrawChildren: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\tdt.rows({ page: 'current' }).iterator('row', function (settings, idx) {\n\t\t\tthat._detailsDisplay(dt.row(idx), true);\n\t\t});\n\t},\n\n\t/**\n\t * Alter the table display for a resized viewport. This involves first\n\t * determining what breakpoint the window currently is in, getting the\n\t * column visibilities to apply and then setting them.\n\t *\n\t * @param  {boolean} forceRedraw Force a redraw\n\t * @private\n\t */\n\t_resize: function (forceRedraw) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar width = $(window).innerWidth();\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar breakpoint = breakpoints[0].name;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\t\tvar oldVis = this.s.current.slice();\n\n\t\t// Determine what breakpoint we are currently at\n\t\tfor (i = breakpoints.length - 1; i >= 0; i--) {\n\t\t\tif (width <= breakpoints[i].width) {\n\t\t\t\tbreakpoint = breakpoints[i].name;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Show the columns for that break point\n\t\tvar columnsVis = this._columnsVisiblity(breakpoint);\n\t\tthis.s.current = columnsVis;\n\n\t\t// Set the class before the column visibility is changed so event\n\t\t// listeners know what the state is. Need to determine if there are\n\t\t// any columns that are not visible but can be shown\n\t\tvar collapsedClass = false;\n\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tif (\n\t\t\t\tcolumnsVis[i] === false &&\n\t\t\t\t!columns[i].never &&\n\t\t\t\t!columns[i].control &&\n\t\t\t\t!dt.column(i).visible() === false\n\t\t\t) {\n\t\t\t\tcollapsedClass = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$(dt.table().node()).toggleClass('collapsed', collapsedClass);\n\n\t\tvar changed = false;\n\t\tvar visible = 0;\n\t\tvar dtSettings = dt.settings()[0];\n\t\tvar colGroup = $(dt.table().node()).children('colgroup');\n\t\tvar colEls = dtSettings.aoColumns.map(function (col) {\n\t\t\treturn col.colEl;\n\t\t});\n\n\t\tdt.columns()\n\t\t\t.eq(0)\n\t\t\t.each(function (colIdx, i) {\n\t\t\t\t//console.log(colIdx, i);\n\t\t\t\t// Do nothing on DataTables' hidden column - DT removes it from the table\n\t\t\t\t// so we need to slide back\n\t\t\t\tif (! dt.column(colIdx).visible()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (columnsVis[i] === true) {\n\t\t\t\t\tvisible++;\n\t\t\t\t}\n\n\t\t\t\tif (forceRedraw || columnsVis[i] !== oldVis[i]) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tthat._setColumnVis(colIdx, columnsVis[i]);\n\t\t\t\t}\n\n\t\t\t\t// DataTables 2 uses `col` to define the width for a column\n\t\t\t\t// and this needs to run each time, as DataTables will change\n\t\t\t\t// the column width. We may need to reattach if we've removed\n\t\t\t\t// an element previously.\n\t\t\t\tif (! columnsVis[i]) {\n\t\t\t\t\tcolEls[i].detach();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthat._colGroupAttach(colGroup, colEls, i);\n\t\t\t\t}\n\t\t\t});\n\n\t\tif (changed) {\n\t\t\tdt.columns.adjust();\n\n\t\t\tthis._redrawChildren();\n\n\t\t\t// Inform listeners of the change\n\t\t\t$(dt.table().node()).trigger('responsive-resize.dt', [\n\t\t\t\tdt,\n\t\t\t\tthis._responsiveOnlyHidden()\n\t\t\t]);\n\n\t\t\t// If no records, update the \"No records\" display element\n\t\t\tif (dt.page.info().recordsDisplay === 0) {\n\t\t\t\t$('td', dt.table().body()).eq(0).attr('colspan', visible);\n\t\t\t}\n\t\t}\n\n\t\tthat._controlClass();\n\t},\n\n\t/**\n\t * Determine the width of each column in the table so the auto column hiding\n\t * has that information to work with. This method is never going to be 100%\n\t * perfect since column widths can change slightly per page, but without\n\t * seriously compromising performance this is quite effective.\n\t *\n\t * @private\n\t */\n\t_resizeAuto: function () {\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar that = this;\n\t\tvar visibleColumns = dt\n\t\t\t.columns()\n\t\t\t.indexes()\n\t\t\t.filter(function (idx) {\n\t\t\t\treturn dt.column(idx).visible();\n\t\t\t});\n\n\t\t// Are we allowed to do auto sizing?\n\t\tif (!this.c.auto) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Are there any columns that actually need auto-sizing, or do they all\n\t\t// have classes defined\n\t\tif (\n\t\t\t$.inArray(\n\t\t\t\ttrue,\n\t\t\t\t$.map(columns, function (c) {\n\t\t\t\t\treturn c.auto;\n\t\t\t\t})\n\t\t\t) === -1\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clone the table with the current data in it\n\t\tvar clonedTable = dt.table().node().cloneNode(false);\n\t\tvar clonedHeader = $(dt.table().header().cloneNode(false)).appendTo(\n\t\t\tclonedTable\n\t\t);\n\t\tvar clonedFooter = $(dt.table().footer().cloneNode(false)).appendTo(\n\t\t\tclonedTable\n\t\t);\n\t\tvar clonedBody = $(dt.table().body())\n\t\t\t.clone(false, false)\n\t\t\t.empty()\n\t\t\t.appendTo(clonedTable); // use jQuery because of IE8\n\n\t\tclonedTable.style.width = 'auto';\n\n\t\t// Header\n\t\tdt.table()\n\t\t\t.header.structure(visibleColumns)\n\t\t\t.forEach((row) => {\n\t\t\t\tvar cells = row\n\t\t\t\t\t.filter(function (el) {\n\t\t\t\t\t\treturn el ? true : false;\n\t\t\t\t\t})\n\t\t\t\t\t.map(function (el) {\n\t\t\t\t\t\treturn $(el.cell)\n\t\t\t\t\t\t\t.clone(false)\n\t\t\t\t\t\t\t.css('display', 'table-cell')\n\t\t\t\t\t\t\t.css('width', 'auto')\n\t\t\t\t\t\t\t.css('min-width', 0);\n\t\t\t\t\t});\n\n\t\t\t\t$('<tr/>').append(cells).appendTo(clonedHeader);\n\t\t\t});\n\n\t\t// Always need an empty row that we can read widths from\n\t\tvar emptyRow = $('<tr/>').appendTo(clonedBody);\n\n\t\tfor (var i = 0; i < visibleColumns.count(); i++) {\n\t\t\temptyRow.append('<td/>');\n\t\t}\n\n\t\t// Body rows\n\t\tdt.rows({ page: 'current' }).every(function (rowIdx) {\n\t\t\tvar node = this.node();\n\n\t\t\tif (! node) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// We clone the table's rows and cells to create the sizing table\n\t\t\tvar tr = node.cloneNode(false);\n\n\t\t\tdt.cells(rowIdx, visibleColumns).every(function (rowIdx2, colIdx) {\n\t\t\t\t// If nodes have been moved out (listHiddenNodes), we need to\n\t\t\t\t// clone from the store\n\t\t\t\tvar store = that.s.childNodeStore[rowIdx + '-' + colIdx];\n\n\t\t\t\tif (store) {\n\t\t\t\t\t$(this.node().cloneNode(false))\n\t\t\t\t\t\t.append($(store).clone())\n\t\t\t\t\t\t.appendTo(tr);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$(this.node()).clone(false).appendTo(tr);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tclonedBody.append(tr);\n\t\t});\n\n\t\t// Any cells which were hidden by Responsive in the host table, need to\n\t\t// be visible here for the calculations\n\t\tclonedBody.find('th, td').css('display', '');\n\n\t\t// Footer\n\t\tdt.table()\n\t\t\t.footer.structure(visibleColumns)\n\t\t\t.forEach((row) => {\n\t\t\t\tvar cells = row\n\t\t\t\t\t.filter(function (el) {\n\t\t\t\t\t\treturn el ? true : false;\n\t\t\t\t\t})\n\t\t\t\t\t.map(function (el) {\n\t\t\t\t\t\treturn $(el.cell)\n\t\t\t\t\t\t\t.clone(false)\n\t\t\t\t\t\t\t.css('display', 'table-cell')\n\t\t\t\t\t\t\t.css('width', 'auto')\n\t\t\t\t\t\t\t.css('min-width', 0);\n\t\t\t\t\t});\n\n\t\t\t\t$('<tr/>').append(cells).appendTo(clonedFooter);\n\t\t\t});\n\n\t\t// In the inline case extra padding is applied to the first column to\n\t\t// give space for the show / hide icon. We need to use this in the\n\t\t// calculation\n\t\tif (this.c.details.type === 'inline') {\n\t\t\t$(clonedTable).addClass('dtr-inline collapsed');\n\t\t}\n\n\t\t// It is unsafe to insert elements with the same name into the DOM\n\t\t// multiple times. For example, cloning and inserting a checked radio\n\t\t// clears the chcecked state of the original radio.\n\t\t$(clonedTable).find('[name]').removeAttr('name');\n\n\t\t// A position absolute table would take the table out of the flow of\n\t\t// our container element, bypassing the height and width (Scroller)\n\t\t$(clonedTable).css('position', 'relative');\n\n\t\tvar inserted = $('<div/>')\n\t\t\t.css({\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1,\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tclear: 'both'\n\t\t\t})\n\t\t\t.append(clonedTable);\n\n\t\tinserted.insertBefore(dt.table().node());\n\n\t\t// The cloned table now contains the smallest that each column can be\n\t\temptyRow.children().each(function (i) {\n\t\t\tvar idx = dt.column.index('fromVisible', i);\n\t\t\tcolumns[idx].minWidth = this.offsetWidth || 0;\n\t\t});\n\n\t\tinserted.remove();\n\t},\n\n\t/**\n\t * Get the state of the current hidden columns - controlled by Responsive only\n\t */\n\t_responsiveOnlyHidden: function () {\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map(this.s.current, function (v, i) {\n\t\t\t// If the column is hidden by DataTables then it can't be hidden by\n\t\t\t// Responsive!\n\t\t\tif (dt.column(i).visible() === false) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn v;\n\t\t});\n\t},\n\n\t/**\n\t * Set a column's visibility.\n\t *\n\t * We don't use DataTables' column visibility controls in order to ensure\n\t * that column visibility can Responsive can no-exist. Since only IE8+ is\n\t * supported (and all evergreen browsers of course) the control of the\n\t * display attribute works well.\n\t *\n\t * @param {integer} col      Column index\n\t * @param {boolean} showHide Show or hide (true or false)\n\t * @private\n\t */\n\t_setColumnVis: function (col, showHide) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar display = showHide ? '' : 'none'; // empty string will remove the attr\n\n\t\tthis._setHeaderVis(col, showHide, dt.table().header.structure());\n\t\tthis._setHeaderVis(col, showHide, dt.table().footer.structure());\n\n\t\tdt.column(col)\n\t\t\t.nodes()\n\t\t\t.to$()\n\t\t\t.css('display', display)\n\t\t\t.toggleClass('dtr-hidden', !showHide);\n\n\t\t// If the are child nodes stored, we might need to reinsert them\n\t\tif (!$.isEmptyObject(this.s.childNodeStore)) {\n\t\t\tdt.cells(null, col)\n\t\t\t\t.indexes()\n\t\t\t\t.each(function (idx) {\n\t\t\t\t\tthat._childNodesRestore(dt, idx.row, idx.column);\n\t\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Set the a column's visibility, taking into account multiple rows\n\t * in a header / footer and colspan attributes\n\t * @param {*} col\n\t * @param {*} showHide\n\t * @param {*} structure\n\t */\n\t_setHeaderVis: function (col, showHide, structure) {\n\t\tvar that = this;\n\t\tvar display = showHide ? '' : 'none';\n\n\t\tstructure.forEach(function (row) {\n\t\t\tif (row[col]) {\n\t\t\t\t$(row[col].cell)\n\t\t\t\t\t.css('display', display)\n\t\t\t\t\t.toggleClass('dtr-hidden', !showHide);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// In a colspan - need to rewind calc the new span since\n\t\t\t\t// display:none elements do not count as being spanned over\n\t\t\t\tvar search = col;\n\n\t\t\t\twhile (search >= 0) {\n\t\t\t\t\tif (row[search]) {\n\t\t\t\t\t\trow[search].cell.colSpan = that._colspan(row, search);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tsearch--;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * How many columns should this cell span\n\t *\n\t * @param {*} row Header structure row\n\t * @param {*} idx The column index of the cell to span\n\t */\n\t_colspan: function (row, idx) {\n\t\tvar colspan = 1;\n\n\t\tfor (var col = idx + 1; col < row.length; col++) {\n\t\t\tif (row[col] === null && this.s.current[col]) {\n\t\t\t\t// colspan and not hidden by Responsive\n\t\t\t\tcolspan++;\n\t\t\t}\n\t\t\telse if (row[col]) {\n\t\t\t\t// Got the next cell, jump out\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn colspan;\n\t},\n\n\t/**\n\t * Update the cell tab indexes for keyboard accessibility. This is called on\n\t * every table draw - that is potentially inefficient, but also the least\n\t * complex option given that column visibility can change on the fly. Its a\n\t * shame user-focus was removed from CSS 3 UI, as it would have solved this\n\t * issue with a single CSS statement.\n\t *\n\t * @private\n\t */\n\t_tabIndexes: function () {\n\t\tvar dt = this.s.dt;\n\t\tvar cells = dt.cells({ page: 'current' }).nodes().to$();\n\t\tvar ctx = dt.settings()[0];\n\t\tvar target = this.c.details.target;\n\n\t\tcells.filter('[data-dtr-keyboard]').removeData('[data-dtr-keyboard]');\n\n\t\tif (typeof target === 'number') {\n\t\t\tdt.cells(null, target, { page: 'current' })\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.attr('tabIndex', ctx.iTabIndex)\n\t\t\t\t.data('dtr-keyboard', 1);\n\t\t}\n\t\telse {\n\t\t\t// This is a bit of a hack - we need to limit the selected nodes to just\n\t\t\t// those of this table\n\t\t\tif (target === 'td:first-child, th:first-child') {\n\t\t\t\ttarget = '>td:first-child, >th:first-child';\n\t\t\t}\n\n\t\t\t$(target, dt.rows({ page: 'current' }).nodes())\n\t\t\t\t.attr('tabIndex', ctx.iTabIndex)\n\t\t\t\t.data('dtr-keyboard', 1);\n\t\t}\n\t}\n});\n\n/**\n * List of default breakpoints. Each item in the array is an object with two\n * properties:\n *\n * * `name` - the breakpoint name.\n * * `width` - the breakpoint width\n *\n * @name Responsive.breakpoints\n * @static\n */\nResponsive.breakpoints = [\n\t{ name: 'desktop', width: Infinity },\n\t{ name: 'tablet-l', width: 1024 },\n\t{ name: 'tablet-p', width: 768 },\n\t{ name: 'mobile-l', width: 480 },\n\t{ name: 'mobile-p', width: 320 }\n];\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.display = {\n\tchildRow: function (row, update, render) {\n\t\tvar rowNode = $(row.node());\n\n\t\tif (update) {\n\t\t\tif (rowNode.hasClass('dtr-expanded')) {\n\t\t\t\trow.child(render(), 'child').show();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (!rowNode.hasClass('dtr-expanded')) {\n\t\t\t\tvar rendered = render();\n\n\t\t\t\tif (rendered === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\trow.child(rendered, 'child').show();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow.child(false);\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\tchildRowImmediate: function (row, update, render) {\n\t\tvar rowNode = $(row.node());\n\n\t\tif (\n\t\t\t(!update && rowNode.hasClass('dtr-expanded')) ||\n\t\t\t!row.responsive.hasHidden()\n\t\t) {\n\t\t\t// User interaction and the row is show, or nothing to show\n\t\t\trow.child(false);\n\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\t// Display\n\t\t\tvar rendered = render();\n\n\t\t\tif (rendered === false) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\trow.child(rendered, 'child').show();\n\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t// This is a wrapper so the modal options for Bootstrap and jQuery UI can\n\t// have options passed into them. This specific one doesn't need to be a\n\t// function but it is for consistency in the `modal` name\n\tmodal: function (options) {\n\t\treturn function (row, update, render, closeCallback) {\n\t\t\tvar modal;\n\t\t\tvar rendered = render();\n\n\t\t\tif (rendered === false) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!update) {\n\t\t\t\t// Show a modal\n\t\t\t\tvar close = function () {\n\t\t\t\t\tmodal.remove(); // will tidy events for us\n\t\t\t\t\t$(document).off('keypress.dtr');\n\t\t\t\t\t$(row.node()).removeClass('dtr-expanded');\n\n\t\t\t\t\tcloseCallback();\n\t\t\t\t};\n\n\t\t\t\tmodal = $('<div class=\"dtr-modal\"/>')\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div class=\"dtr-modal-display\"/>')\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t$('<div class=\"dtr-modal-content\"/>')\n\t\t\t\t\t\t\t\t\t.data('dtr-row-idx', row.index())\n\t\t\t\t\t\t\t\t\t.append(rendered)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\t\t'<div class=\"dtr-modal-close\">&times;</div>'\n\t\t\t\t\t\t\t\t).click(function () {\n\t\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div class=\"dtr-modal-background\"/>').click(\n\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo('body');\n\n\t\t\t\t$(row.node()).addClass('dtr-expanded');\n\n\t\t\t\t$(document).on('keyup.dtr', function (e) {\n\t\t\t\t\tif (e.keyCode === 27) {\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmodal = $('div.dtr-modal-content');\n\n\t\t\t\tif (modal.length && row.index() === modal.data('dtr-row-idx')) {\n\t\t\t\t\tmodal.empty().append(rendered);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Modal not shown, nothing to update\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options && options.header) {\n\t\t\t\t$('div.dtr-modal-content').prepend(\n\t\t\t\t\t'<h2>' + options.header(row) + '</h2>'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\t}\n};\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.renderer = {\n\tlistHiddenNodes: function () {\n\t\treturn function (api, rowIdx, columns) {\n\t\t\tvar that = this;\n\t\t\tvar ul = $(\n\t\t\t\t'<ul data-dtr-index=\"' + rowIdx + '\" class=\"dtr-details\"/>'\n\t\t\t);\n\t\t\tvar found = false;\n\n\t\t\t$.each(columns, function (i, col) {\n\t\t\t\tif (col.hidden) {\n\t\t\t\t\tvar klass = col.className\n\t\t\t\t\t\t? 'class=\"' + col.className + '\"'\n\t\t\t\t\t\t: '';\n\n\t\t\t\t\t$(\n\t\t\t\t\t\t'<li ' +\n\t\t\t\t\t\t\tklass +\n\t\t\t\t\t\t\t' data-dtr-index=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\" data-dt-row=\"' +\n\t\t\t\t\t\t\tcol.rowIndex +\n\t\t\t\t\t\t\t'\" data-dt-column=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\">' +\n\t\t\t\t\t\t\t'<span class=\"dtr-title\">' +\n\t\t\t\t\t\t\tcol.title +\n\t\t\t\t\t\t\t'</span> ' +\n\t\t\t\t\t\t\t'</li>'\n\t\t\t\t\t)\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<span class=\"dtr-data\"/>').append(\n\t\t\t\t\t\t\t\tthat._childNodes(\n\t\t\t\t\t\t\t\t\tapi,\n\t\t\t\t\t\t\t\t\tcol.rowIndex,\n\t\t\t\t\t\t\t\t\tcol.columnIndex\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) // api.cell( col.rowIndex, col.columnIndex ).node().childNodes ) )\n\t\t\t\t\t\t.appendTo(ul);\n\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn found ? ul : false;\n\t\t};\n\t},\n\n\tlistHidden: function () {\n\t\treturn function (api, rowIdx, columns) {\n\t\t\tvar data = $.map(columns, function (col) {\n\t\t\t\tvar klass = col.className\n\t\t\t\t\t? 'class=\"' + col.className + '\"'\n\t\t\t\t\t: '';\n\n\t\t\t\treturn col.hidden\n\t\t\t\t\t? '<li ' +\n\t\t\t\t\t\t\tklass +\n\t\t\t\t\t\t\t' data-dtr-index=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\" data-dt-row=\"' +\n\t\t\t\t\t\t\tcol.rowIndex +\n\t\t\t\t\t\t\t'\" data-dt-column=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\">' +\n\t\t\t\t\t\t\t'<span class=\"dtr-title\">' +\n\t\t\t\t\t\t\tcol.title +\n\t\t\t\t\t\t\t'</span> ' +\n\t\t\t\t\t\t\t'<span class=\"dtr-data\">' +\n\t\t\t\t\t\t\tcol.data +\n\t\t\t\t\t\t\t'</span>' +\n\t\t\t\t\t\t\t'</li>'\n\t\t\t\t\t: '';\n\t\t\t}).join('');\n\n\t\t\treturn data\n\t\t\t\t? $(\n\t\t\t\t\t\t'<ul data-dtr-index=\"' +\n\t\t\t\t\t\t\trowIdx +\n\t\t\t\t\t\t\t'\" class=\"dtr-details\"/>'\n\t\t\t\t).append(data)\n\t\t\t\t: false;\n\t\t};\n\t},\n\n\ttableAll: function (options) {\n\t\toptions = $.extend(\n\t\t\t{\n\t\t\t\ttableClass: ''\n\t\t\t},\n\t\t\toptions\n\t\t);\n\n\t\treturn function (api, rowIdx, columns) {\n\t\t\tvar data = $.map(columns, function (col) {\n\t\t\t\tvar klass = col.className\n\t\t\t\t\t? 'class=\"' + col.className + '\"'\n\t\t\t\t\t: '';\n\n\t\t\t\treturn (\n\t\t\t\t\t'<tr ' +\n\t\t\t\t\tklass +\n\t\t\t\t\t' data-dt-row=\"' +\n\t\t\t\t\tcol.rowIndex +\n\t\t\t\t\t'\" data-dt-column=\"' +\n\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t'\">' +\n\t\t\t\t\t'<td>' +\n\t\t\t\t\tcol.title +\n\t\t\t\t\t':' +\n\t\t\t\t\t'</td> ' +\n\t\t\t\t\t'<td>' +\n\t\t\t\t\tcol.data +\n\t\t\t\t\t'</td>' +\n\t\t\t\t\t'</tr>'\n\t\t\t\t);\n\t\t\t}).join('');\n\n\t\t\treturn $(\n\t\t\t\t'<table class=\"' +\n\t\t\t\t\toptions.tableClass +\n\t\t\t\t\t' dtr-details\" width=\"100%\"/>'\n\t\t\t).append(data);\n\t\t};\n\t}\n};\n\n/**\n * Responsive default settings for initialisation\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.defaults = {\n\t/**\n\t * List of breakpoints for the instance. Note that this means that each\n\t * instance can have its own breakpoints. Additionally, the breakpoints\n\t * cannot be changed once an instance has been creased.\n\t *\n\t * @type {Array}\n\t * @default Takes the value of `Responsive.breakpoints`\n\t */\n\tbreakpoints: Responsive.breakpoints,\n\n\t/**\n\t * Enable / disable auto hiding calculations. It can help to increase\n\t * performance slightly if you disable this option, but all columns would\n\t * need to have breakpoint classes assigned to them\n\t *\n\t * @type {Boolean}\n\t * @default  `true`\n\t */\n\tauto: true,\n\n\t/**\n\t * Details control. If given as a string value, the `type` property of the\n\t * default object is set to that value, and the defaults used for the rest\n\t * of the object - this is for ease of implementation.\n\t *\n\t * The object consists of the following properties:\n\t *\n\t * * `display` - A function that is used to show and hide the hidden details\n\t * * `renderer` - function that is called for display of the child row data.\n\t *   The default function will show the data from the hidden columns\n\t * * `target` - Used as the selector for what objects to attach the child\n\t *   open / close to\n\t * * `type` - `false` to disable the details display, `inline` or `column`\n\t *   for the two control types\n\t *\n\t * @type {Object|string}\n\t */\n\tdetails: {\n\t\tdisplay: Responsive.display.childRow,\n\n\t\trenderer: Responsive.renderer.listHidden(),\n\n\t\ttarget: 0,\n\n\t\ttype: 'inline'\n\t},\n\n\t/**\n\t * Orthogonal data request option. This is used to define the data type\n\t * requested when Responsive gets the data to show in the child row.\n\t *\n\t * @type {String}\n\t */\n\torthogonal: 'display'\n};\n\n/*\n * API\n */\nvar Api = $.fn.dataTable.Api;\n\n// Doesn't do anything - work around for a bug in DT... Not documented\nApi.register('responsive()', function () {\n\treturn this;\n});\n\nApi.register('responsive.index()', function (li) {\n\tli = $(li);\n\n\treturn {\n\t\tcolumn: li.data('dtr-index'),\n\t\trow: li.parent().data('dtr-index')\n\t};\n});\n\nApi.register('responsive.rebuild()', function () {\n\treturn this.iterator('table', function (ctx) {\n\t\tif (ctx._responsive) {\n\t\t\tctx._responsive._classLogic();\n\t\t}\n\t});\n});\n\nApi.register('responsive.recalc()', function () {\n\treturn this.iterator('table', function (ctx) {\n\t\tif (ctx._responsive) {\n\t\t\tctx._responsive._resizeAuto();\n\t\t\tctx._responsive._resize();\n\t\t}\n\t});\n});\n\nApi.register('responsive.hasHidden()', function () {\n\tvar ctx = this.context[0];\n\n\treturn ctx._responsive\n\t\t? $.inArray(false, ctx._responsive._responsiveOnlyHidden()) !== -1\n\t\t: false;\n});\n\nApi.registerPlural(\n\t'columns().responsiveHidden()',\n\t'column().responsiveHidden()',\n\tfunction () {\n\t\treturn this.iterator(\n\t\t\t'column',\n\t\t\tfunction (settings, column) {\n\t\t\t\treturn settings._responsive\n\t\t\t\t\t? settings._responsive._responsiveOnlyHidden()[column]\n\t\t\t\t\t: false;\n\t\t\t},\n\t\t\t1\n\t\t);\n\t}\n);\n\n/**\n * Version information\n *\n * @name Responsive.version\n * @static\n */\nResponsive.version = '3.0.2';\n\n$.fn.dataTable.Responsive = Responsive;\n$.fn.DataTable.Responsive = Responsive;\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on('preInit.dt.dtr', function (e, settings, json) {\n\tif (e.namespace !== 'dt') {\n\t\treturn;\n\t}\n\n\tif (\n\t\t$(settings.nTable).hasClass('responsive') ||\n\t\t$(settings.nTable).hasClass('dt-responsive') ||\n\t\tsettings.oInit.responsive ||\n\t\tDataTable.defaults.responsive\n\t) {\n\t\tvar init = settings.oInit.responsive;\n\n\t\tif (init !== false) {\n\t\t\tnew Responsive(settings, $.isPlainObject(init) ? init : {});\n\t\t}\n\t}\n});\n\n\nexport default DataTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}